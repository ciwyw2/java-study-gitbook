(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{1238:function(t,e,a){"use strict";a.r(e);var r=a(42),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"中国人社微服务实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中国人社微服务实践"}},[t._v("#")]),t._v(" 中国人社微服务实践")]),t._v(" "),a("h2",{attrs:{id:"_1-技术考虑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-技术考虑"}},[t._v("#")]),t._v(" 1. 技术考虑")]),t._v(" "),a("h3",{attrs:{id:"_1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1"}},[t._v("#")]),t._v(" 1.1")]),t._v(" "),a("h3",{attrs:{id:"_1-2-网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-网关"}},[t._v("#")]),t._v(" 1.2 网关")]),t._v(" "),a("p",[t._v("网关主要考虑zuul和Spring Cloud Gateway")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Q: 为什么选Spring Cloud Gateway?")]),t._v(" "),a("blockquote",[a("p",[t._v("A: 支持限流和非阻塞API,基于Filter 链很容易扩展")])])]),t._v(" "),a("li",[a("p",[t._v("Q: 你主要用网关做了什么")]),t._v(" "),a("blockquote",[a("p",[t._v("A:")]),t._v(" "),a("ol",[a("li",[t._v("通过"),a("strong",[t._v("动态路由")]),t._v("转发到对应的服务")]),t._v(" "),a("li",[a("strong",[t._v("负载均衡")]),t._v("（以lb:// 开头）")]),t._v(" "),a("li",[t._v("全局过滤器：")]),t._v(" "),a("li",[a("strong",[t._v("认证授权")]),t._v("：设置统一的请求头，其他微服务通过请求头来判断是否走了网关（）")]),t._v(" "),a("li",[t._v("请求之前，"),a("strong",[t._v("打印请求日志")]),t._v("（自定义GlobalFilter）")]),t._v(" "),a("li",[t._v("过滤掉那些禁止外部调用的地址（自定义GlobalFilter）")]),t._v(" "),a("li",[t._v("对验证码进行限流（使用阿里Sentinel 做的网关限流）")]),t._v(" "),a("li",[t._v("对网关请求异常做统一处理")]),t._v(" "),a("li",[t._v("对服务断路器做降级处理（Hystrix）")]),t._v(" "),a("li",[a("strong",[t._v("跨域设置")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-3-授权认证服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-授权认证服务"}},[t._v("#")]),t._v(" 1.3 授权认证服务")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Q: 你授权认证服务具体都做写什么")]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("实现OAuth2 认证（通过spring security 和 spring oauth）")])]),t._v(" "),a("li",[a("p",[t._v("配置一个认证服务器（AuthorizationServer） 和 资源服务器（ResourceServer）")])]),t._v(" "),a("li",[a("p",[t._v("认证服务器（AuthorizationServer）")]),t._v(" "),a("ol",[a("li",[t._v("客户端详情（ClientDetailsServiceConfigurer）通过JdbcClientDetailsService来"),a("strong",[t._v("读取数据库中的client 信息")]),t._v("，并将它们保存在redis中")]),t._v(" "),a("li",[t._v("令牌端点(Token Endpoint)的"),a("strong",[t._v("安全约束")]),t._v("(AuthorizationServerSecurityConfigurer)，本应用暂没配置，用Spring Security来配置")]),t._v(" "),a("li",[t._v("配置端点接入 AuthorizationServerEndpointsConfigurer\n"),a("ol",[a("li",[t._v("TokenStore"),a("strong",[t._v("保存token之类的管理操作")]),t._v("，包含配置了RedisTokenStore和JwtTokenStore")]),t._v(" "),a("li",[t._v("配置userDetailsService管理用户信息，"),a("strong",[t._v("从数据库中查出用户信息")]),t._v("，校验用户权限")]),t._v(" "),a("li",[t._v("配置 "),a("strong",[t._v("认证管理器")]),t._v("（authenticationManager），Grant Type设置为password，因为设置了密码")]),t._v(" "),a("li",[a("strong",[t._v("自定义异常处理")]),t._v("exceptionTranslator")])])])])]),t._v(" "),a("li",[a("p",[t._v("验证码生成与校验")])]),t._v(" "),a("li",[a("p",[t._v("验证码过滤器")])]),t._v(" "),a("li",[a("p",[t._v("将所有HTTP请求拦截，获取请求头，从请求头中获取clientId")])]),t._v(" "),a("li",[a("p",[t._v("判断请求是否为  /oauth/token，或者一些要认证的接口")])]),t._v(" "),a("li",[a("p",[t._v("转发到验证码验证")])]),t._v(" "),a("li",[a("p",[t._v("验证通过再请求对应的请求")])]),t._v(" "),a("li",[a("p",[t._v("注册、登录查找用户信息等")])]),t._v(" "),a("li",[a("p",[t._v("第三方登录")])]),t._v(" "),a("li",[a("p",[t._v("授权客户端管理（客户端包括，app，swagger，前端）")])])])]),t._v(" "),a("p",[t._v("Q: 如何确定当前登录用户")]),t._v(" "),a("blockquote",[a("p",[t._v("通过SecurityContextHolder存储安全上下文，就能知道当前的用户是谁，是否已经被认证，用户拥有哪些权限。")]),t._v(" "),a("p",[t._v("原理："),a("strong",[t._v("通过ThreadLocal 来存储认证信息")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authentication")]),t._v(" authentication "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityContextHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAuthentication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" principalObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authentication"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrincipal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注：principalObj 为ChinahrssAuthUser， 它实现了org.springframework.security.core.userdetails.user 接口")])]),t._v(" "),a("p",[t._v("Q:在什么时候添加请求token")]),t._v(" "),a("blockquote",[a("p",[t._v("在刷新token和登录的时候，才添加请求头 认证token。")]),t._v(" "),a("p",[t._v("这个认证的token 是包含了client_id和client_secret,通过Base64加密")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 获取令牌时，请求头信息(Basic Base64.encode(client_id:client_secret))\n authorizationValue: 'Basic ZmViczoxMjM0NTY=',\n")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_1-4-系统服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-系统服务"}},[t._v("#")]),t._v(" 1.4 系统服务")]),t._v(" "),a("p",[t._v("Q: 系统服务服务的主要做什么？")]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("登录，记录登录日志，更新登录时间")])]),t._v(" "),a("li",[a("p",[t._v("获取用户显示菜单和对应的路由")])]),t._v(" "),a("li",[a("p",[t._v("获取用户首页相关显示信息")])]),t._v(" "),a("li",[a("p",[t._v("部门：增删改查导出")])]),t._v(" "),a("li",[a("p",[t._v("用户：增删改查导出")])]),t._v(" "),a("li",[a("p",[t._v("角色：增删改查导出")])]),t._v(" "),a("li",[a("p",[t._v("菜单：增删改查导出")])]),t._v(" "),a("li",[a("p",[t._v("操作日志：对关键操作增加操作日志，添加自定义注解（@ControllerEndpoint ）进行操作日志的添加")])]),t._v(" "),a("li",[a("p",[t._v("应用登录日志：增删查导出")])]),t._v(" "),a("li",[a("p",[t._v("线程池实例 ThreadPoolTaskExecutor")])])])]),t._v(" "),a("p",[t._v("Q:  如何做分页")]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("依赖mybatisplus")])]),t._v(" "),a("li",[a("p",[t._v("继承ServiceImpl")])]),t._v(" "),a("li",[a("p",[t._v("通过page方法查询分页数据")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" QueryWrapper<Log> queryWrapper = new QueryWrapper<>();\n            queryWrapper.lambda().eq(Log::getUsername, log.getUsername().toLowerCase());\n              Page<Log> page = new Page<>(request.getPageNum(), request.getPageSize());\n    \nthis.page(page, queryWrapper);\n")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-5-监控服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-监控服务"}},[t._v("#")]),t._v(" 1.5 监控服务")]),t._v(" "),a("p",[t._v("使用Spring Boot Actuator 和 Spring Boot Admin监控微服务的状态")]),t._v(" "),a("h3",{attrs:{id:"_1-5-基础服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-基础服务"}},[t._v("#")]),t._v(" 1.5 基础服务")]),t._v(" "),a("ol",[a("li",[t._v("通过拦截器将未经过网关的请求拦截（ implements HandlerInterceptor）")]),t._v(" "),a("li",[t._v("供各个微服务 security 的资源服务的\n"),a("ol",[a("li",[a("strong",[t._v("没有权限访问该资源")]),t._v("情况 (implements AccessDeniedHandler)")]),t._v(" "),a("li",[t._v("Token 无效的情况（ implements AuthenticationEntryPoint ）")])])]),t._v(" "),a("li",[t._v("全局的异常处理（@RestControllerAdvice）")])]),t._v(" "),a("h4",{attrs:{id:"_1-5-1-链路追踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-链路追踪"}},[t._v("#")]),t._v(" 1.5.1 链路追踪")]),t._v(" "),a("ol",[a("li",[t._v("RabbitMQ用于收集Sleuth提供的追踪信息，")]),t._v(" "),a("li",[t._v("然后zipkin Server 从RabbitMQ里获取")])]),t._v(" "),a("h4",{attrs:{id:"_1-5-2-日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-日志"}},[t._v("#")]),t._v(" 1.5.2 日志")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("sql日志打印")]),t._v(" "),a("p",[t._v("P6spy输出最终数据库sql日志")])]),t._v(" "),a("li",[a("p",[t._v("日志收集")]),t._v(" "),a("p",[t._v("使用ELK 做对各微服务做日志收集")])])]),t._v(" "),a("h2",{attrs:{id:"_1-6-相关注解作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-相关注解作用"}},[t._v("#")]),t._v(" 1.6 相关注解作用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ControllerEndpoint：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("经过具体controller 的端点，然后通过 "),a("code",[t._v("aspectj")]),t._v("  aop将controller的信息保存到日志中。")])]),t._v(" "),a("li",[a("p",[t._v("保存的日志的信息包含：方法、ip、操作、用户名、开始时间、结束时间")])]),t._v(" "),a("li",[a("p",[t._v("未保存成功的抛出异常，不记录日志")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@ControllerEndpoint(operation = "新增部门", exceptionMessage = "新增部门失败")\n public void addDept(@Valid Dept dept) {\n        this.deptService.createDept(dept);\n}\n')])])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);