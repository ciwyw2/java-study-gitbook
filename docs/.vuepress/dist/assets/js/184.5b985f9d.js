(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{953:function(e,a,t){"use strict";t.r(a);var r=t(42),n=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"集成与使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集成与使用"}},[e._v("#")]),e._v(" 集成与使用")]),e._v(" "),t("h2",{attrs:{id:"_1-mybatis集成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-mybatis集成"}},[e._v("#")]),e._v(" 1. mybatis集成")]),e._v(" "),t("h3",{attrs:{id:"_1-1-新建springboot项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-新建springboot项目"}},[e._v("#")]),e._v(" 1.1  新建SpringBoot项目")]),e._v(" "),t("h3",{attrs:{id:"_1-2-在pom文件中添加依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-在pom文件中添加依赖"}},[e._v("#")]),e._v(" 1.2 在pom文件中添加依赖")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<dependency>\n   <groupId>org.mybatis.spring.boot</groupId>\n   <artifactId>mybatis-spring-boot-starter</artifactId>\n   <version>2.1.0</version>\n</dependency>\n\n<dependency>\n   <groupId>mysql</groupId>\n   <artifactId>mysql-connector-java</artifactId>\n   <scope>runtime</scope>\n</dependency>\n")])])]),t("h3",{attrs:{id:"_1-3-在-application-yml配置datasource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-在-application-yml配置datasource"}},[e._v("#")]),e._v(" 1.3 在 application.yml配置datasource")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("spring:\n  datasource:\n    username: root\n    password: zsz123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://120.79.200.111:3306/mybatisdemo?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC\n")])])]),t("h2",{attrs:{id:"_2-mybatis-generator-集成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-mybatis-generator-集成"}},[e._v("#")]),e._v(" 2.mybatis-generator 集成")]),e._v(" "),t("h3",{attrs:{id:"_2-1-pom文件下添加插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-pom文件下添加插件"}},[e._v("#")]),e._v(" 2.1 pom文件下添加插件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<build>\n   <plugins>\n      <plugin>\n         <groupId>org.mybatis.generator</groupId>\n         <artifactId>mybatis-generator-maven-plugin</artifactId>\n         <version>1.3.5</version>\n         <configuration>\n            <configurationFile>src/main/resources/config/mybatis-generator.xml</configurationFile>\n            <overwrite>true</overwrite>\n            <verbose>true</verbose>\n         </configuration>\n      </plugin>\n\n   </plugins>\n</build>\n")])])]),t("h3",{attrs:{id:"_2-2-添加配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-添加配置文件"}},[e._v("#")]),e._v(" 2.2 添加配置文件")]),e._v(" "),t("p",[e._v("在resource的config目录下添加 mybatis-generator.xml文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"\n        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">\n<generatorConfiguration>\n    \x3c!--数据库驱动--\x3e\n    \x3c!--注意要保证运行MyBatis Generator的时候能够找到mysql的connector--\x3e\n    \x3c!-- location   The full path name of a JAR/ZIP file to add to the classpath, or a directory to add to the classpath.--\x3e\n    <classPathEntry location="/Users/zhangshengzhong/Project/jar/mysql-connector-java-5.1.7-bin.jar"/>\n    \x3c!-- A unique identifier for this context. This value will be used in some error messages. --\x3e\n    <context id="mysql2java" targetRuntime="MyBatis3">\n        \x3c!-- http://www.mybatis.org/generator/configreference/commentGenerator.html --\x3e\n        \x3c!-- 阻止生成自动注释 --\x3e\n        <commentGenerator>\n            <property name="javaFileEncoding" value="UTF-8"/>\n            <property name="suppressDate" value="true"/>\n            <property name="suppressAllComments" value="true"/>\n        </commentGenerator>\n        \x3c!--数据库链接地址账号密码--\x3e\n        <jdbcConnection driverClass="com.mysql.jdbc.Driver"\n                        connectionURL="jdbc:mysql://120.79.200.111:3306/mybatisdemo" userId="root" password="zsz123456">\n        </jdbcConnection>\n        <javaTypeResolver>\n            <property name="forceBigDecimals" value="false"/>\n        </javaTypeResolver>\n        \x3c!-- 生成Model类存放位置 --\x3e\n        <javaModelGenerator targetPackage="com.zszdevelop.domain" targetProject="src/main/java">\n            <property name="enableSubPackages" value="true"/>\n            <property name="trimStrings" value="true"/>\n        </javaModelGenerator>\n        \x3c!-- 生成映射文件存放位置 --\x3e\n        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">\n            <property name="enableSubPackages" value="true"/>\n        </sqlMapGenerator>\n        \x3c!--生成Dao类存放位置--\x3e\n        <javaClientGenerator type="XMLMAPPER" targetPackage="me.zszdevelop.dao" targetProject="src">\n            <property name="enableSubPackages" value="true"/>\n        </javaClientGenerator>\n        \x3c!--配置MBG对哪个数据表进行生成工作, 对于MYSQL数据库来说, 因为没有SCHEMA这个概念, 必须使用catalog来指定到底用哪个数据库, 否则如果多个数据库有同名表, MYBATIS会自己选一个--\x3e\n        <table tableName="sys_user" domainObjectName="SysUser"></table>\n\n    </context>\n</generatorConfiguration>\n')])])]),t("h3",{attrs:{id:"_2-3-生成mapping-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-生成mapping-文件"}},[e._v("#")]),e._v(" 2.3 生成mapping 文件")]),e._v(" "),t("p",[e._v("在idea 的右边mavenprojects 中的plugs中找到mybatis-generator")]),e._v(" "),t("p",[e._v("点击mybatis-generator就生成了")])])}),[],!1,null,null,null);a.default=n.exports}}]);