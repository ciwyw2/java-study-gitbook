(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{1292:function(a,s,e){"use strict";e.r(s);var t=e(42),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"elk日志收集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elk日志收集"}},[a._v("#")]),a._v(" ELK日志收集")]),a._v(" "),t("h2",{attrs:{id:"_1-背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-背景"}},[a._v("#")]),a._v(" 1. 背景")]),a._v(" "),t("p",[a._v("各个微服务系统的日志都保存在各自指定的目录中，如果这些微服务部署在不同的服务器上，那么日志文件也是"),t("strong",[a._v("分散在各自的服务器上")]),a._v("。分散的日志不利于我们快速通过日志定位问题，我们可以借助ELK来"),t("strong",[a._v("收集各个微服务系统的日志并集中展示")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_2-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-简介"}},[a._v("#")]),a._v(" 2. 简介")]),a._v(" "),t("p",[a._v("ELK即Elasticsearch、Logstash和Kibana首字母缩写。Elasticsearch用于存储日志信息，Logstash用于收集日志，Kibana用于图形化展示。")]),a._v(" "),t("h2",{attrs:{id:"_3-docker-compose搭建elk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-compose搭建elk"}},[a._v("#")]),a._v(" 3. Docker Compose搭建ELK")]),a._v(" "),t("h3",{attrs:{id:"_3-1-增加内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-增加内存"}},[a._v("#")]),a._v(" 3.1 增加内存")]),a._v(" "),t("p",[a._v("Elasticsearch默认使用mmapfs目录来存储索引。操作系统默认的mmap计数太低可能导致内存不足，我们可以使用下面这条命令来增加内存：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("sysctl -w vm.max_map_count=262144\n")])])]),t("p",[t("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"_3-2-创建elasticsearch数据挂载路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-创建elasticsearch数据挂载路径"}},[a._v("#")]),a._v(" 3.2 创建Elasticsearch数据挂载路径：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir -p /elk/elasticsearch/data\n")])])]),t("h3",{attrs:{id:"_3-3-对该路径授予777权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-对该路径授予777权限"}},[a._v("#")]),a._v(" 3.3 对该路径授予777权限")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("chmod 777 /elk/elasticsearch/data\n")])])]),t("h3",{attrs:{id:"_3-4-创建elasticsearch插件挂载路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-创建elasticsearch插件挂载路径"}},[a._v("#")]),a._v(" 3.4 创建Elasticsearch插件挂载路径：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir -p /elk/elasticsearch/plugins\n")])])]),t("h3",{attrs:{id:"_3-5-创建logstash配置文件存储路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-创建logstash配置文件存储路径"}},[a._v("#")]),a._v(" 3.5 创建Logstash配置文件存储路径：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir -p /elk/logstash\n")])])]),t("h3",{attrs:{id:"_3-6-创建配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-创建配置文件"}},[a._v("#")]),a._v(" 3.6 创建配置文件")]),a._v(" "),t("p",[a._v("在/elk/logstash路径下创建"),t("code",[a._v("logstash-elk.conf")]),a._v("配置文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("vim /elk/logstash/logstash-elk.conf\n")])])]),t("p",[a._v("内容如下所示：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('input {\n  tcp {\n    mode => "server"\n    host => "0.0.0.0"\n    port => 4560\n    codec => json_lines\n  }\n}\noutput {\n  elasticsearch {\n    hosts => "es:9200"\n    index => "febs-logstash-%{+YYYY.MM.dd}"\n  }\n}\n')])])]),t("h3",{attrs:{id:"_3-7-创建elk-docker-compose文件存储路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-创建elk-docker-compose文件存储路径"}},[a._v("#")]),a._v(" 3.7 创建ELK Docker Compose文件存储路径")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir -p /elk/DockerCompos\n")])])]),t("p",[a._v("在该目录下创建"),t("code",[a._v("docker-compose.yml")]),a._v("文件：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("vim /elk/DockerCompos/docker-compose.yml\n")])])]),t("p",[a._v("内容如下所示：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('version: \'3\'\nservices:\n  elasticsearch:\n    image: elasticsearch:6.4.1\n    container_name: elasticsearch\n    environment:\n      - "cluster.name=elasticsearch" #集群名称为elasticsearch\n      - "discovery.type=single-node" #单节点启动\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" #jvm内存分配为512MB\n    volumes:\n      - /elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins\n      - /elk/elasticsearch/data:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n  kibana:\n    image: kibana:6.4.1\n    container_name: kibana\n    links:\n      - elasticsearch:es #配置elasticsearch域名为es\n    depends_on:\n      - elasticsearch\n    environment:\n      - "elasticsearch.hosts=http://es:9200" #因为上面配置了域名，所以这里可以简\n写为http://es:9200\n    ports:\n      - 5601:5601\n  logstash:\n    image: logstash:6.4.1\n    container_name: logstash\n    volumes:\n      - /elk/logstash/logstash-elk.conf:/usr/share/logstash/pipeline/logstash.conf\n    depends_on:\n      - elasticsearch\n    links:\n      - elasticsearch:es\n    ports:\n      - 4560:4560\n')])])]),t("p",[a._v("切换到  /elk/DockerCompos 目录下，使用如下命令")]),a._v(" "),t("h3",{attrs:{id:"_3-8-启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-启动"}},[a._v("#")]),a._v(" 3.8 启动")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker-compose up -d\n")])])]),t("p",[a._v("第一次启动的时候，Docker需要拉取ELK镜像，过程可能稍慢，耐心等待即可。成功启动后，观察容器运行情况：")]),a._v(" "),t("h3",{attrs:{id:"_3-9-查看启动状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-查看启动状态"}},[a._v("#")]),a._v(" 3.9 查看启动状态")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker ps -a\n")])])]),t("p",[t("img",{attrs:{src:e(711),alt:"image-20200127095851591"}})]),a._v(" "),t("p",[a._v("三个状态都为up就证明启动成功了")]),a._v(" "),t("ul",[t("li",[a._v("如遇到状态为exit的，请查看当前内存是否足够")])]),a._v(" "),t("h2",{attrs:{id:"_4-logstash中安装json-lines插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-logstash中安装json-lines插件"}},[a._v("#")]),a._v(" 4. Logstash中安装json_lines插件")]),a._v(" "),t("h3",{attrs:{id:"_4-1-进入logstash容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-进入logstash容器"}},[a._v("#")]),a._v(" 4.1 进入Logstash容器")]),a._v(" "),t("p",[a._v("使用如下命令进入到Logstash容器中：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker exec -it logstash /bin/bash\n")])])]),t("h3",{attrs:{id:"_4-2-安装步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-安装步骤"}},[a._v("#")]),a._v(" 4.2 安装步骤")]),a._v(" "),t("ul",[t("li",[a._v("切换到/bin目录")]),a._v(" "),t("li",[a._v("安装json_lines插件")]),a._v(" "),t("li",[a._v("退出")])]),a._v(" "),t("p",[t("img",{attrs:{src:e(712),alt:"image-20200127100248559"}})]),a._v(" "),t("h2",{attrs:{id:"_5-效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-效果"}},[a._v("#")]),a._v(" 5. 效果")]),a._v(" "),t("p",[a._v("使用浏览器访问 http://120.79.200.111:5601/ 可以看到Kibana管理界面：")]),a._v(" "),t("p",[t("img",{attrs:{src:e(713),alt:"image-20200127100502389"}})])])}),[],!1,null,null,null);s.default=r.exports},711:function(a,s,e){a.exports=e.p+"assets/img/image-20200127095851591.6b79b73f.png"},712:function(a,s,e){a.exports=e.p+"assets/img/image-20200127100248559.293921d1.png"},713:function(a,s,e){a.exports=e.p+"assets/img/image-20200127100502389.b4dcac4a.png"}}]);