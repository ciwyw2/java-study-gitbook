(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{1065:function(t,v,_){"use strict";_.r(v);var a=_(42),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"如何合理配置线程池的大小"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何合理配置线程池的大小"}},[t._v("#")]),t._v(" 如何合理配置线程池的大小")]),t._v(" "),_("p",[t._v("一般需要根据任务的类型来配置线程池大小：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("如果是CPU密集型任务，"),_("strong",[t._v("就需要尽量压榨CPU")]),t._v("，应配置尽可能小的线程，参考值可以设为 "),_("em",[t._v("N")]),t._v("CPU+1")])]),t._v(" "),_("li",[_("p",[t._v("如果是IO密集型任务，"),_("strong",[t._v("因为IO操作不占用CPU")]),t._v("，不要让CPU闲下来，应加大线程数量,参考值可以设置为2NCPU+1")])])]),t._v(" "),_("p",[t._v("当然，这只是一个参考值，具体的设置还需要根据实际情况进行调整，比如可以先将线程池大小设置为参考值，再观察任务运行情况和系统负载、资源利用率来进行适当调整。")]),t._v(" "),_("h2",{attrs:{id:"io密集型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#io密集型"}},[t._v("#")]),t._v(" io密集型")]),t._v(" "),_("p",[t._v("要减少请求数量或请求大小")]),t._v(" "),_("ol",[_("li",[t._v("数据库操作")]),t._v(" "),_("li",[t._v("网络请求操作")])]),t._v(" "),_("h2",{attrs:{id:"cpu-密集型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cpu-密集型"}},[t._v("#")]),t._v(" cpu 密集型")]),t._v(" "),_("p",[t._v("多线程会好点")])])}),[],!1,null,null,null);v.default=s.exports}}]);