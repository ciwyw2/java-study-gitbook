(window.webpackJsonp=window.webpackJsonp||[]).push([[367],{1134:function(e,t,n){"use strict";n.r(t);var s=n(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"aop打印日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aop打印日志"}},[e._v("#")]),e._v(" AOP打印日志")]),e._v(" "),n("h2",{attrs:{id:"_1-log-注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-log-注解"}},[e._v("#")]),e._v(" 1. @Log 注解")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Log {\n    String value() default "";\n}\n')])])]),n("h2",{attrs:{id:"_2-aop记录操作日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-aop记录操作日志"}},[e._v("#")]),e._v(" 2.  AOP记录操作日志")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('/**\n * AOP 记录用户操作日志\n */\n@Slf4j\n@Aspect\n@Component\npublic class LogAspect {\n\n    @Autowired\n    private FebsProperties febsProperties;\n\n    @Autowired\n    private LogService logService;\n\n    @Pointcut("@annotation(com.ylzinfo.common.annotation.Log)")\n    public void pointcut() {\n        // do nothing\n    }\n\n    @Around("pointcut()")\n    public Object around(ProceedingJoinPoint point) throws JsonProcessingException {\n        Object result = null;\n        long beginTime = System.currentTimeMillis();\n        try {\n            // 执行方法\n            result = point.proceed();\n        } catch (Throwable e) {\n            log.error(e.getMessage());\n        }\n        // 获取 request\n        HttpServletRequest request = HttpContextUtil.getHttpServletRequest();\n        // 设置 IP 地址\n        String ip = IPUtil.getIpAddr(request);\n        // 执行时长(毫秒)\n        long time = System.currentTimeMillis() - beginTime;\n        if (febsProperties.isOpenAopLog()) {\n            // 保存日志\n            String token = (String) SecurityUtils.getSubject().getPrincipal();\n            String username = JWTUtil.getUsername(token);\n\n            SysLog log = new SysLog();\n            log.setUsername(username);\n            log.setIp(ip);\n            log.setTime(time);\n            logService.saveLog(point, log);\n        }\n        return result;\n    }\n}\n\n')])])]),n("p",[e._v("将用户名、操作ip、操作时长记录到数据库中")]),e._v(" "),n("h2",{attrs:{id:"_3-具体使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-具体使用"}},[e._v("#")]),e._v(" 3. 具体使用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('@Log("新增用户")\n@PostMapping\n@RequiresPermissions("user:add")\npublic void addUser( @Valid User user) throws FebsException {\n       ....\n}\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);