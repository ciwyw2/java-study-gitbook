{"remainingRequest":"/Users/zsz/Project/gitbook/java/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zsz/Project/gitbook/java/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zsz/Project/gitbook/java/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zsz/Project/gitbook/java/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/zsz/Project/gitbook/java/docs/dependencies/mq/RabbitMQ/install/Docker安装RabbitMQ.md?vue&type=template&id=0b2b2129&","dependencies":[{"path":"/Users/zsz/Project/gitbook/java/docs/dependencies/mq/RabbitMQ/install/Docker安装RabbitMQ.md","mtime":1601468246943},{"path":"/Users/zsz/Project/gitbook/java/node_modules/cache-loader/dist/cjs.js","mtime":1601468252969},{"path":"/Users/zsz/Project/gitbook/java/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1601468257225},{"path":"/Users/zsz/Project/gitbook/java/node_modules/cache-loader/dist/cjs.js","mtime":1601468252969},{"path":"/Users/zsz/Project/gitbook/java/node_modules/vue-loader/lib/index.js","mtime":1601468257224},{"path":"/Users/zsz/Project/gitbook/java/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}