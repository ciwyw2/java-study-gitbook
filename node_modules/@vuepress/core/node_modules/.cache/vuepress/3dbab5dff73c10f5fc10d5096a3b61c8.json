{"remainingRequest":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\gitbook\\java\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\gitbook\\java\\docs\\frontend\\layout\\flex\\example\\flex布局-圣杯布局.md?vue&type=template&id=c5721a4c&","dependencies":[{"path":"E:\\gitbook\\java\\docs\\frontend\\layout\\flex\\example\\flex布局-圣杯布局.md","mtime":1602211026865},{"path":"E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}