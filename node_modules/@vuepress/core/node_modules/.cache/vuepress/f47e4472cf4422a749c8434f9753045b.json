{"remainingRequest":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\gitbook\\java\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\gitbook\\java\\docs\\frontend\\problem\\js导出.md?vue&type=template&id=497a77e2&","dependencies":[{"path":"E:\\gitbook\\java\\docs\\frontend\\problem\\js导出.md","mtime":1601282282943},{"path":"E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\gitbook\\java\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}