{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{1318:function(v,_,l){\"use strict\";l.r(_);var e=l(42),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[l(\"h1\",{attrs:{id:\"盒马鲜生20200316\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#盒马鲜生20200316\"}},[v._v(\"#\")]),v._v(\" 盒马鲜生20200316\")]),v._v(\" \"),l(\"h2\",{attrs:{id:\"_1-问题\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-问题\"}},[v._v(\"#\")]),v._v(\" 1. 问题\")]),v._v(\" \"),l(\"ol\",[l(\"li\",[l(\"p\",[v._v(\"说一下印象深刻的项目，你再里面是什么角色，你是怎么做的\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"app后台是管理提出来，还是有产品提出的\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你是怎么实现的？是做个配置前端做个解析这样就完了吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你能给我讲下你要处理哪些东西\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你有用过线程池吧，线程池的执行流程，他在使用过程如何发挥作用的\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal 你有使用吗？你是怎么用的？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal里面具体是怎么实现的？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal不remove 掉会导致什么问题？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"线上你有遇到FullGC吗？说一下FullGC产生的一个过程\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"FullGC你再线上遇到问题你应该怎么排查？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你了解Jstack 如何把线程里面的东西拿出来？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你了解过java中有agent（探针），你了解过吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你了解过一个探针怎么把服务给拉下来的？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"JVM中有一个叫双亲委派机制，你有了解吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你有了解说有哪些框架不遵循双亲委派机制？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你知道tomcat 是如何破坏的吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"springbean 的作用域有了解吗?他的默认作用域是什么？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"single 和propeType 的区别，你能跟我讲一下吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"我该什么时候用single，什么时候用propeType\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"springbean 是单例的，他会有线程安全问题，多线程访问你这个单例对象\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql 的sql调优你有做过吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql有复核索引也叫联合索引，有用过吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"假如现在我有这样一个查询条件，我看下你应该怎么建联合索引\")]),v._v(\" \"),l(\"p\",[v._v(\"where a=1 and b=2 and c>3 and b=4,我对这四个进行联合索引我该怎么建\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql 数据库有个事务的隔离级别，默认有什么隔离级别\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"能讲一下readcommit会导致什么问题呢？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你对设计模式有了解吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你近期有在看什么技术文档或开源项目吗？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"介绍一下这个开源项目是干嘛的？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你自己写的那个服务，你有做一些稳定性的措施，保证性的措施吗？比如别人调用你的服务，调用量很大，对你的性能产生了比较大的影响，做一些保护。如何保证不会影响到你的服务\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你是怎么做降级的？\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"两年一换，你为什么离职\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"如何利用业余时间学习新技术？\")])])]),v._v(\" \"),l(\"h2\",{attrs:{id:\"_2-精选回答\"}},[l(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-精选回答\"}},[v._v(\"#\")]),v._v(\" 2. 精选回答\")]),v._v(\" \"),l(\"ol\",{attrs:{start:\"5\"}},[l(\"li\",[l(\"p\",[v._v(\"线程池的执行流程，构造器参数，他在使用过程如何发挥作用的\")]),v._v(\" \"),l(\"blockquote\",[l(\"ol\",[l(\"li\",[v._v(\"当前池中的线程比核心数少，新建一个线程执行任务\")]),v._v(\" \"),l(\"li\",[v._v(\"核心池已满，但任务队列未满，添加到队列中\")]),v._v(\" \"),l(\"li\",[v._v(\"核心池已满，队列已满，试着创建一个新线程\")])]),v._v(\" \"),l(\"hr\"),v._v(\" \"),l(\"p\",[v._v(\"构造器参数的作用\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"第一个参数corePoolSize 核心线程数，\")])]),v._v(\" \"),l(\"ol\",[l(\"li\",[v._v(\"在线程数少于核心线程数，有新任务进来就新建一个线程。\")]),v._v(\" \"),l(\"li\",[v._v(\"等超出核心数量后，就不会新建线程，空闲线程就得去任务队列里去任务执行\")])]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"maximumPoolSize：最大线程数据\")]),v._v(\" \"),l(\"li\",[v._v(\"包含核心线程池数量+核心以为的数量\")]),v._v(\" \"),l(\"li\",[v._v(\"如果任务队列满了，并且池中线程数小于最大线程数，会再创建新的线程执行任务\")]),v._v(\" \"),l(\"li\",[l(\"code\",[v._v(\"keepAliveTime\")]),v._v(\"：核心池以外的线程存活时间，即没有任务的外包的存活时间\")]),v._v(\" \"),l(\"li\",[v._v(\"如果给线程池设置 \"),l(\"code\",[v._v(\"allowCoreThreadTimeOut(true)\")]),v._v(\"，则核心线程在空闲时头上也会响起死亡的倒计时\")]),v._v(\" \"),l(\"li\",[v._v(\"如果任务是多而容易执行的，可以调大这个参数，那样线程就可以在存活的时间里有更大可能接受新任务\")]),v._v(\" \"),l(\"li\",[l(\"code\",[v._v(\"workQueue\")]),v._v(\"：保存待执行任务的阻塞队列\")]),v._v(\" \"),l(\"li\",[l(\"code\",[v._v(\"threadFactory\")]),v._v(\"：每个线程创建的地方\")]),v._v(\" \"),l(\"li\",[v._v(\"handler：饱和策略，大家都很忙，咋办呢，有四种策略\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal 你有使用吗？你是怎么用的？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"ThreadLocal中填充的变量属于当前线程，该变量对其他线程而言是隔离的。\")]),v._v(\" \"),l(\"p\",[v._v(\"所以ThreadLocal主要用来实现变量在线程间隔离的场景，如\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"用来存储用户的session\")]),v._v(\" \"),l(\"li\",[v._v(\"还有像线程内的上下文管理器、数据库连接等\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal里面具体是怎么实现的？\")]),v._v(\" \"),l(\"blockquote\",[l(\"ol\",[l(\"li\",[v._v(\"每个Thread 维护这一个ThreadLocalMap的引用\")]),v._v(\" \"),l(\"li\",[v._v(\"ThreadLocalMap 是 ThreadLocal的内部类，用Entry来进行存储\")]),v._v(\" \"),l(\"li\",[v._v(\"调用ThreadLocal的Set（）方法时，实际上就是往ThreadLocalMap设置值，key是ThreadLocal对象，值是传递进来的对象\")]),v._v(\" \"),l(\"li\",[v._v(\"调用ThreadLocal的get()方法时，实际上就是往ThreadLocalMap获取值，key是ThreadLocal对象\")]),v._v(\" \"),l(\"li\",[l(\"strong\",[v._v(\"ThreadLocal本身并不存储值\")]),v._v(\"，它只是\"),l(\"strong\",[v._v(\"作为一个key来让线程从ThreadLocalMap获取value\")]),v._v(\"。\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"ThreadLocal不remove 掉会导致什么问题？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"不remove掉，就会导致内存泄漏问题\")]),v._v(\" \"),l(\"p\",[v._v(\"因为：ThreadLocalMap的生命周期跟Thread一样长，如果没有手动删除对应的key就会导致内存泄漏\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"线上你有遇到FullGC吗？说一下FullGC产生的一个过程\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"随着程序的运行，对象不断创建，肯定会遇到FullGC\")]),v._v(\" \"),l(\"ol\",[l(\"li\",[v._v(\"堆可以分成新生代和老年代，FullGC发生在老年代\")]),v._v(\" \"),l(\"li\",[v._v(\"对象优先在Eden区分配内存\")]),v._v(\" \"),l(\"li\",[v._v(\"大对象和长期存活的对象进入老年代\")]),v._v(\" \"),l(\"li\",[v._v(\"当老年代的空间不足时，就产生了FullGC\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"FullGC你再线上遇到问题你应该怎么排查？\")]),v._v(\" \"),l(\"blockquote\",[l(\"ol\",[l(\"li\",[v._v(\"使用 jstat -gcutil 命令监控当前系统GC状况\")]),v._v(\" \"),l(\"li\",[v._v(\"通过jmap dump：format=b,file=导出系统当前的内存数据\")]),v._v(\" \"),l(\"li\",[v._v(\"通过mat工具分析得出内存中主要什么对象消耗内存，进而可以处理相关代码\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你了解Jstack 如何把线程里面的东西拿出来？\")]),v._v(\" \"),l(\"blockquote\",[l(\"ol\",[l(\"li\",[v._v(\"jstack等命令会与jvm进程建立socket连接\")]),v._v(\" \"),l(\"li\",[v._v(\"发送对应的指令（jstack发送了threaddump执行）\")]),v._v(\" \"),l(\"li\",[v._v(\"然后再读取返回的数据\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你了解过java中有agent（探针），你了解过吗？探针怎么把服务给拉下来的？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"Agent是一个运行在目标JVM的特定程序，他的职责就是从目标JVM中获取数据，然后将数据传递给外部进程。\")]),v._v(\" \"),l(\"hr\"),v._v(\" \"),l(\"p\",[v._v(\"他主要通过一个java虚拟机对外提供的native编程接口 JVMTI 。获取运行时的JVM信息，比如线程,GC等\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"JVM中有一个叫双亲委派机制，你有了解吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"类加载的时候\")]),v._v(\" \"),l(\"ol\",[l(\"li\",[v._v(\"首先判断类是否被加载过，已经加载直接返回\")]),v._v(\" \"),l(\"li\",[v._v(\"加载\")]),v._v(\" \"),l(\"li\",[v._v(\"首先会把请求委派到父类加载器的\"),l(\"code\",[v._v(\"loacClass\")]),v._v(\"处理，所以请求最终都会到BootstrapClassLoader\")]),v._v(\" \"),l(\"li\",[v._v(\"当父类无法处理时自己处理\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你有了解说有哪些框架不遵循双亲委派机制？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"Tomcat 不遵循\")]),v._v(\" \"),l(\"p\",[v._v(\"一个tomcat web容器可能需要部署两个应用，不同应用可能依赖同一个第三方依赖的不同版本。\")]),v._v(\" \"),l(\"p\",[v._v(\"tomcat 通过破坏双亲委派机制达到了这个效果\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你知道tomcat 是如何破坏的吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"Tomcat 自定义了好几个类加载器，其中WebappClassLoader 是私有的类加载器，加载路径中的class只对当前webapp可见\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"springbean 的作用域有了解吗?他的默认作用域是什么？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"作用域主要有 singleton、prototype、request、session。\")]),v._v(\" \"),l(\"p\",[v._v(\"默认都是单例的\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"Singleton 和propeType 的区别，你能跟我讲一下吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"ul\",[l(\"li\",[v._v(\"Singleton 是唯一bean实例，单例\")]),v._v(\" \"),l(\"li\",[v._v(\"prototype：每次请求都会创建一个新的bean实例\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"我该什么时候用single，什么时候用propeType\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"主要依据这个bean 有无状态会话来决定\")]),v._v(\" \"),l(\"p\",[v._v(\"无状态会话，选择singleton\")]),v._v(\" \"),l(\"p\",[v._v(\"有状态会话，选择prototype，有状态配置singleton 会出现线程安全问题\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"springbean 是单例的，他会有线程安全问题，多线程访问你这个单例对象，你是怎么处理的\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"在勒种定义一个ThreadLocal成员变量，将需要的可变成员变量保存在ThreadLocal中\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql 的sql调优你有做过吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"结合实际场景，从以下几个方面说\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"设计表时：合适的索引、合适的数据类型、非空，单表字段不超过20\")]),v._v(\" \"),l(\"li\",[v._v(\"编写sql时：禁止一切会影响sql速度的语句\")]),v._v(\" \"),l(\"li\",[v._v(\"分表：水平拆分和垂直拆分\")]),v._v(\" \"),l(\"li\",[v._v(\"分库：读写分离\")])])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql有复核索引也叫联合索引，有用过吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"两个或两个列以上的索引被称为联合索引，mysql可以从左到右使用索引中字段，一个查询可以只使用索引中的一部分，但只能是最左部分（最左前缀）\")]),v._v(\" \"),l(\"p\",[v._v(\"例如索引 key index（a,b,c） 可以支持\"),l(\"strong\",[v._v(\"a|a,b|a,b,c\")]),v._v(\"，三种组合查找，但不支持b,c 进行查找\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"假如现在我有这样一个查询条件，我看下你应该怎么建联合索引\")]),v._v(\" \"),l(\"p\",[v._v(\"where a=1 and b=2 and c>3 and b=4,我对这四个进行联合索引我该怎么建\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[l(\"code\",[v._v(\">\")]),v._v(\" 后面不会再用索引，所以要把c>3 放在最后，然后索引用abdc\")]),v._v(\" \"),l(\"p\",[v._v(\"如果使用key index（a，b，c，d），且不改变顺序，那么只会使用到abc\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"mysql 数据库有个事务的隔离级别，默认有什么隔离级别\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"事务的隔离级别：\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[v._v(\"READ-UNCOMMITED\")]),v._v(\" \"),l(\"li\",[v._v(\"READ-COMMITED\")]),v._v(\" \"),l(\"li\",[v._v(\"REPEATABLE-READ\")]),v._v(\" \"),l(\"li\",[v._v(\"SERIALIZABLE\")])]),v._v(\" \"),l(\"p\",[v._v(\"Mysql 默认是 REPEATABLE-READ\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"能讲一下 READ-COMMITED 会导致什么问题呢？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"隔离级别使用READ-COMMITED 后，不会出现脏读，但是还是可能出现不可重复读和幻读\")])])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"你对设计模式有了解吗？\")]),v._v(\" \"),l(\"blockquote\",[l(\"p\",[v._v(\"之前写过一个SDK 提供给其他公司使用\")]),v._v(\" \"),l(\"p\",[v._v(\"主要用到的设计模式\")]),v._v(\" \"),l(\"ul\",[l(\"li\",[l(\"p\",[v._v(\"Builder建造者模式：将对象构造通过建造者模式来配置，达到解耦和易于扩展的目的\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"门面（外观）模式：通过创建一个统一的门面入口，包装子系统中多个类，客户端通过调用外观类的方法来调用内部子系统所有方法\")])]),v._v(\" \"),l(\"li\",[l(\"p\",[v._v(\"观察者模式：当一个用户状态等发生变化时，则会自动通知他的依赖对象\")])])])])])])])}),[],!1,null,null,null);_.default=a.exports}}]);","extractedComments":[]}