{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{1015:function(e,t,r){\"use strict\";r.r(t);var s=r(42),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"渲染web视图\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#渲染web视图\"}},[e._v(\"#\")]),e._v(\" 渲染Web视图\")]),e._v(\" \"),s(\"p\",[e._v(\"控制器方法\"),s(\"strong\",[e._v(\"并没有直接产生\")]),e._v(\"浏览器中渲染\"),s(\"strong\",[e._v(\"所需的HTML\")])]),e._v(\" \"),s(\"p\",[e._v(\"controller 做的\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"将一些数据填充到模型中\")]),e._v(\" \"),s(\"li\",[e._v(\"然后将模型传递给一个用来渲染的视图\")])]),e._v(\" \"),s(\"h2\",{attrs:{id:\"spring-是如何确定使用哪个视图实现渲染模型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring-是如何确定使用哪个视图实现渲染模型\"}},[e._v(\"#\")]),e._v(\" Spring 是如何确定使用哪个视图实现渲染模型\")]),e._v(\" \"),s(\"p\",[e._v(\"这就是视图解析器的作用\")]),e._v(\" \"),s(\"p\",[e._v(\"例如：InternalResureViewResolver视图解析器\")]),e._v(\" \"),s(\"p\",[e._v('​\\t使用\"WEB-INF/views/\"前缀和”jsp“后缀来确定渲染模型的JSP物理文件位置')]),e._v(\" \"),s(\"h2\",{attrs:{id:\"spring-mvc的viewresolver解析流程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring-mvc的viewresolver解析流程\"}},[e._v(\"#\")]),e._v(\" Spring MVC的ViewResolver解析流程\")]),e._v(\" \"),s(\"p\",[e._v(\"Spring MVC定义了一个名为ViewResolver的接口\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"public interface ViewResolver {\\n    View resolveViewName(String var1, Locale var2) throws Exception;\\n}\\n\")])])]),s(\"p\",[e._v(\"当给resolveViewName()方法传入一个视图名和Locale对象是，他会返回一个View 实例\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"public interface View {\\n    String getContentType();\\n\\n    void render(Map<String, ?> map, HttpServletRequest request, HttpServletResponse response) throws Exception;\\n}\\n\")])])]),s(\"p\",[e._v(\"View 接口的任务就是接受模型以及Servlet的request 和response对象，并将输出结果渲染到response中\")]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"如果我们要自定义ViewResolver\")])]),e._v(\" \"),s(\"p\",[e._v(\"编写ViewResolver 和view 的实现，将要渲染的结果放到response中，进而展现到用户的浏览器中\")]),e._v(\" \"),s(\"p\",[e._v(\"###Spring 自带的13个视图解析器\")]),e._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:r(842),alt:\"image-20190801234854268\"}})])])}),[],!1,null,null,null);t.default=a.exports},842:function(e,t,r){e.exports=r.p+\"assets/img/image-20190801234854268.64711dea.png\"}}]);","extractedComments":[]}