{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[415],{946:function(t,a,r){\"use strict\";r.r(a);var _=r(42),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"group-by-having分组数据\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#group-by-having分组数据\"}},[t._v(\"#\")]),t._v(\" GROUP BY/HAVING分组数据\")]),t._v(\" \"),r(\"p\",[t._v(\"分组数据主要涉及两个子句\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"GROUP BY\\n\"),r(\"ul\",[r(\"li\",[t._v(\"GROUP BY 子句可以包含任意数目的列，因此可以对分组进行嵌套，更细致的进行分组\")]),t._v(\" \"),r(\"li\",[t._v(\"如果在GROUP BY 子句中嵌套了分组，数据将在最后指定的分组上进行汇总，换句话说，在建立分组时，指定的所有列都一起计算（所以不能从个别列取回数据）\")]),t._v(\" \"),r(\"li\",[t._v(\"GROUP BY 子句中列出的每一列都必须是检索列或有效表达式\")]),t._v(\" \"),r(\"li\",[t._v(\"GROUP BY 子句必须出现在WHERE 子句之后，GROUP BY 子句之前\")])])]),t._v(\" \"),r(\"li\",[t._v(\"HAVING\")])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"_2-创建分组\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-创建分组\"}},[t._v(\"#\")]),t._v(\" 2. 创建分组\")]),t._v(\" \"),r(\"p\",[t._v(\"分组是使用GROUP BY 子句建立的\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"# 查询出相同供应商的产品数量\\nSELECT vend_id,COUNT(*) AS num_prods\\nFROM Products\\nGROUP BY vend_id;\\n\")])])]),r(\"h2\",{attrs:{id:\"_3-过滤分组\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-过滤分组\"}},[t._v(\"#\")]),t._v(\" 3. 过滤分组\")]),t._v(\" \"),r(\"p\",[t._v(\"除了能用GROUP BY 分组数据外，SQL 还允许过滤分组，规定包括哪些分组，排除哪些分组。\")]),t._v(\" \"),r(\"p\",[t._v(\"HAVING 类似于WHERE ,只不过WHERE 过滤行，而HAVING 过滤分组\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"SELECT cust_id,COUNT(*) AS orders\\nFROM Orders\\nGROUP BY cust_id\\nHAVING COUNT(*) >= 2;\\n\")])])]),r(\"h3\",{attrs:{id:\"_3-1-having-和where-的差别\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-having-和where-的差别\"}},[t._v(\"#\")]),t._v(\" 3.1 HAVING 和WHERE 的差别\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[t._v(\"WHERE 在数据分组前进行过滤\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"HAVING 在数据分组之后进行过滤\")])])]),t._v(\" \"),r(\"h3\",{attrs:{id:\"_3-2-同时使用having-和where\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-同时使用having-和where\"}},[t._v(\"#\")]),t._v(\" 3.2 同时使用HAVING 和WHERE\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"# where 过滤所有prod_price 至少为4的行，然后按vend_id 分组数据，HAVING 子句过滤计数为2或2以上的分组\\nSELECT vend_id,COUNT(*) AS num_prods\\nFROM Products\\nWHERE prod_price >= 4\\nGROUP BY vend_id\\nHAVING COUNT(*) >=2;\\n\")])])]),r(\"h2\",{attrs:{id:\"_4-分组和排序\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-分组和排序\"}},[t._v(\"#\")]),t._v(\" 4. 分组和排序\")]),t._v(\" \"),r(\"h3\",{attrs:{id:\"_4-1-order-by-与group-by-的区别\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-1-order-by-与group-by-的区别\"}},[t._v(\"#\")]),t._v(\" 4.1 ORDER BY 与GROUP BY 的区别\")]),t._v(\" \"),r(\"table\",[r(\"thead\",[r(\"tr\",[r(\"th\",[t._v(\"ORDER  BY\")]),t._v(\" \"),r(\"th\",[t._v(\"GROUP BY\")])])]),t._v(\" \"),r(\"tbody\",[r(\"tr\",[r(\"td\",[t._v(\"对产生的输出排序\")]),t._v(\" \"),r(\"td\",[t._v(\"对行分组，但输出可能不是分组顺序\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[t._v(\"任意列都可以使用（设置非选择的列也可以使用）\")]),t._v(\" \"),r(\"td\",[t._v(\"只可能使用选择列或表达式列，而且必须使用每个选择列表达式\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[t._v(\"不一定需要\")]),t._v(\" \"),r(\"td\",[t._v(\"如果与聚集函数一起使用列，则必须使用\")])])])]),t._v(\" \"),r(\"h3\",{attrs:{id:\"_4-2-不要忘记使用order-by\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-2-不要忘记使用order-by\"}},[t._v(\"#\")]),t._v(\" 4.2 不要忘记使用ORDER BY\")]),t._v(\" \"),r(\"p\",[t._v(\"一般在使用GROUP BY 子句时，应该也给出ORDER BY 子句，这是保证数据正确排序的唯一方法，千万不要依赖GROUP BY 排序数据\")])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}