{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[425],{916:function(t,v,_){\"use strict\";_.r(v);var s=_(42),r=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"junit常见注解和执行顺序\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#junit常见注解和执行顺序\"}},[t._v(\"#\")]),t._v(\" Junit常见注解和执行顺序\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"常见注解\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常见注解\"}},[t._v(\"#\")]),t._v(\" 常见注解\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[_(\"p\",[t._v(\"@Before：\")]),t._v(\" \"),_(\"p\",[t._v(\"初始化方法在\"),_(\"strong\",[t._v(\"任何一个测试方法执行之前\")]),t._v(\"，必须执行的代码\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"@After：\")]),t._v(\" \"),_(\"p\",[t._v(\"释放资源，在如\"),_(\"strong\",[t._v(\"何一个测试方法执行之后\")]),t._v(\"，需要进行的收尾工作\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"@Test\")]),t._v(\" \"),_(\"p\",[t._v(\"测试方法：表明这是一个测试方法，在Junit中将会自动执行\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"@Ignore:\")]),t._v(\" \"),_(\"p\",[t._v(\"忽略的测试方法：标注的含义就是“尚未完成。不参与测试”，这样测试就是忽略而不是失败\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"@BeforeClass：\")]),t._v(\" \"),_(\"p\",[t._v(\"针对所有测试，也就是\"),_(\"strong\",[t._v(\"整个测试类中\")]),t._v(\"，在所有测试方法执行前，都会先执行他的注解方法，而且\"),_(\"strong\",[t._v(\"只执行一次\")])]),t._v(\" \"),_(\"p\",[t._v(\"修饰符必须是 public static void xxx\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"@AfterClass:\")]),t._v(\" \"),_(\"p\",[t._v(\"针对所有测试，也就是整个测试类中，在所有测试方法都执行完之后，才会执行的的注解方法，而且只会执行一次啊\")]),t._v(\" \"),_(\"p\",[t._v(\"修饰符必须是public static void xxx\")])])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"执行顺序\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#执行顺序\"}},[t._v(\"#\")]),t._v(\" 执行顺序\")]),t._v(\" \"),_(\"p\",[t._v(\"@BeforeClass  -> @Befor-> @Test ->@Ater ->@AfterClass\")])])}),[],!1,null,null,null);v.default=r.exports}}]);","extractedComments":[]}