{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{1328:function(t,e,a){\"use strict\";a.r(e);var n=a(42),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"处理自动装配的歧义性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#处理自动装配的歧义性\"}},[t._v(\"#\")]),t._v(\" 处理自动装配的歧义性\")]),t._v(\" \"),a(\"p\",[t._v(\"当有bean 自动装配出现了歧义性时，spring无法自动装配，会抛出NoUniqueBeanDefinitionException\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"解决歧义性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决歧义性\"}},[t._v(\"#\")]),t._v(\" 解决歧义性\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"@Primary 首选项\")]),t._v(\" \"),a(\"p\",[t._v(\"当遇到歧义性的时候，Spring将选用首选的bean\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"@Qualifier 限定符\")]),t._v(\" \"),a(\"p\",[t._v(\"在注入时指定想要注入哪个bean\")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}