{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{1017:function(t,a,s){\"use strict\";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"jdk监控和故障处理工具汇总\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jdk监控和故障处理工具汇总\"}},[t._v(\"#\")]),t._v(\" JDK监控和故障处理工具汇总\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-jdk命令行工具\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-jdk命令行工具\"}},[t._v(\"#\")]),t._v(\" 1.  JDK命令行工具\")]),t._v(\" \"),s(\"p\",[t._v(\"这些命令在JDK 安装目录下的bin目录下\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"jps\")]),t._v(\" (JVM Process Status）: 类似 UNIX 的 \"),s(\"code\",[t._v(\"ps\")]),t._v(\" 命令。用户查看所有 Java 进程的启动类、传入参数和 Java 虚拟机参数等信息；\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"jstat\")]),t._v(\"（ JVM Statistics Monitoring Tool）: 用于收集 HotSpot 虚拟机各方面的运行数据;\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"jinfo\")]),t._v(\" (Configuration Info for Java) : Configuration Info forJava,显示虚拟机配置信息;\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"jmap\")]),t._v(\" (Memory Map for Java) :生成堆转储快照;\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"jhat\")]),t._v(\" (JVM Heap Dump Browser ) : 用于分析 heapdump 文件，它会建立一个 HTTP/HTML 服务器，让用户可以在浏览器上查看分析结果;\")]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"jstack\")]),t._v(\" (Stack Trace for Java):生成虚拟机当前时刻的线程快照，线程快照就是当前虚拟机内每一条线程正在执行的方法堆栈的集合。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-1-jps-查看所有-java-进程\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-jps-查看所有-java-进程\"}},[t._v(\"#\")]),t._v(\" 1.1 \"),s(\"code\",[t._v(\"jps\")]),t._v(\":查看所有 Java 进程\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jps\")]),t._v(\"(JVM Process Status) 命令类似 UNIX 的 \"),s(\"code\",[t._v(\"ps\")]),t._v(\" 命令。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jps\")]),t._v(\"：显示虚拟机执行主类名称以及这些进程的本地虚拟机唯一 ID（Local Virtual Machine Identifier,LVMID）。\"),s(\"code\",[t._v(\"jps -q\")]),t._v(\" ：只输出进程的本地虚拟机唯一 ID。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jps\\n7360 NettyClient2\\n17396\\n7972 Launcher\\n16504 Jps\\n17340 NettyServer\\n\")])])]),s(\"p\",[s(\"code\",[t._v(\"jps -l\")]),t._v(\":输出主类的全名，如果进程执行的是 Jar 包，输出 Jar 路径。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jps -l\\n7360 firstNettyDemo.NettyClient2\\n17396\\n7972 org.jetbrains.jps.cmdline.Launcher\\n16492 sun.tools.jps.Jps\\n17340 firstNettyDemo.NettyServer\\n5541 mywebsocket.jar\\n\")])])]),s(\"p\",[s(\"code\",[t._v(\"jps -v\")]),t._v(\"：输出虚拟机进程启动时 JVM 参数。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jps -m\")]),t._v(\"：输出传递给 Java 进程 main() 函数的参数。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-2-jstat-监视虚拟机各种运行状态信息\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-jstat-监视虚拟机各种运行状态信息\"}},[t._v(\"#\")]),t._v(\" 1.2 \"),s(\"code\",[t._v(\"jstat\")]),t._v(\": 监视虚拟机各种运行状态信息\")]),t._v(\" \"),s(\"p\",[t._v(\"jstat（JVM Statistics Monitoring Tool） 使用于监视虚拟机各种运行状态信息的命令行工具。 它可以显示本地或者远程（需要远程主机提供 RMI 支持）虚拟机进程中的类信息、内存、垃圾收集、JIT 编译等运行数据，在没有 GUI，只提供了纯文本控制台环境的服务器上，它将是运行期间定位虚拟机性能问题的首选工具。\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"jstat 命令使用格式：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"jstat -<option> [-t] [-h<lines>] <vmid> [<interval> [<count>]]\\n\")])])]),s(\"p\",[t._v(\"比如 \"),s(\"code\",[t._v(\"jstat -gc -h3 31736 1000 10\")]),t._v(\"表示分析进程 id 为 31736 的 gc 情况，每隔 1000ms 打印一次记录，打印 10 次停止，每 3 行后打印指标头部\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"常见的 option 如下：\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"jstat -class vmid\")]),t._v(\" ：显示 ClassLoader 的相关信息；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -compiler vmid\")]),t._v(\" ：显示 JIT 编译的相关信息；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gc vmid\")]),t._v(\" ：显示与 GC 相关的堆信息；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gccapacity vmid\")]),t._v(\" ：显示各个代的容量及使用情况；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcnew vmid\")]),t._v(\" ：显示新生代信息；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcnewcapcacity vmid\")]),t._v(\" ：显示新生代大小与使用情况；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcold vmid\")]),t._v(\" ：显示老年代和永久代的信息；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcoldcapacity vmid\")]),t._v(\" ：显示老年代的大小；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcpermcapacity vmid\")]),t._v(\" ：显示永久代大小；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"jstat -gcutil vmid\")]),t._v(\" ：显示垃圾收集信息；\")])]),t._v(\" \"),s(\"p\",[t._v(\"另外，加上 \"),s(\"code\",[t._v(\"-t\")]),t._v(\"参数可以在输出信息上加一个 Timestamp 列，显示程序的运行时间。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-3-jinfo-实时地查看和调整虚拟机各项参数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-jinfo-实时地查看和调整虚拟机各项参数\"}},[t._v(\"#\")]),t._v(\" 1.3 \"),s(\"code\",[t._v(\"jinfo\")]),t._v(\": 实时地查看和调整虚拟机各项参数\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jinfo vmid\")]),t._v(\" :输出当前 jvm 进程的全部参数和系统属性 (第一部分是系统的属性，第二部分是 JVM 的参数)。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jinfo -flag name vmid\")]),t._v(\" :输出对应名称的参数的具体值。比如输出 MaxHeapSize、查看当前 jvm 进程是否开启打印 GC 日志 ( \"),s(\"code\",[t._v(\"-XX:PrintGCDetails\")]),t._v(\" :详细 GC 日志模式，这两个都是默认关闭的)。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jinfo  -flag MaxHeapSize 17340\\n-XX:MaxHeapSize=2124414976\\nC:\\\\Users\\\\SnailClimb>jinfo  -flag PrintGC 17340\\n-XX:-PrintGC\\n\")])])]),s(\"p\",[t._v(\"使用 jinfo 可以在不重启虚拟机的情况下，可以动态的修改 jvm 的参数。尤其在线上的环境特别有用,请看下面的例子：\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jinfo -flag [+|-]name vmid\")]),t._v(\" 开启或者关闭对应名称的参数。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jinfo  -flag  PrintGC 17340\\n-XX:-PrintGC\\n\\nC:\\\\Users\\\\SnailClimb>jinfo  -flag  +PrintGC 17340\\n\\nC:\\\\Users\\\\SnailClimb>jinfo  -flag  PrintGC 17340\\n-XX:+PrintGC\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-4-jmap-生成堆转储快照\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4-jmap-生成堆转储快照\"}},[t._v(\"#\")]),t._v(\" 1.4 \"),s(\"code\",[t._v(\"jmap\")]),t._v(\":生成堆转储快照\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jmap\")]),t._v(\"（Memory Map for Java）命令用于生成堆转储快照。 如果不使用 \"),s(\"code\",[t._v(\"jmap\")]),t._v(\" 命令，要想获取 Java 堆转储，可以使用 \"),s(\"code\",[t._v(\"“-XX:+HeapDumpOnOutOfMemoryError”\")]),t._v(\" 参数，可以让虚拟机在 OOM 异常出现之后自动生成 dump 文件，Linux 命令下可以通过 \"),s(\"code\",[t._v(\"kill -3\")]),t._v(\" 发送进程退出信号也能拿到 dump 文件。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jmap\")]),t._v(\" 的作用并不仅仅是为了获取 dump 文件，它还可以查询 finalizer 执行队列、Java 堆和永久代的详细信息，如空间使用率、当前使用的是哪种收集器等。和\"),s(\"code\",[t._v(\"jinfo\")]),t._v(\"一样，\"),s(\"code\",[t._v(\"jmap\")]),t._v(\"有不少功能在 Windows 平台下也是受限制的。\")]),t._v(\" \"),s(\"p\",[t._v(\"示例：将指定应用程序的堆快照输出到桌面。后面，可以通过 jhat、Visual VM 等工具分析该堆文件。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"jmap -dump:format=b,file=./heap.hprof 19012\\nDumping heap to /home/ftpuser/services/mywebsocket/heap.hprof ...\\nHeap dump file created\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-5-jhat-分析-heapdump-文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-5-jhat-分析-heapdump-文件\"}},[t._v(\"#\")]),t._v(\" 1.5 \"),s(\"strong\",[t._v(\"jhat\")]),t._v(\": 分析 heapdump 文件\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"jhat\")]),t._v(\" 用于分析 heapdump 文件，它会建立一个 HTTP/HTML 服务器，让用户可以在浏览器上查看分析结果。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jhat C:\\\\Users\\\\SnailClimb\\\\Desktop\\\\heap.hprof\\nReading from C:\\\\Users\\\\SnailClimb\\\\Desktop\\\\heap.hprof...\\nDump file created Sat May 04 12:30:31 CST 2019\\nSnapshot read, resolving...\\nResolving 131419 objects...\\nChasing references, expect 26 dots..........................\\nEliminating duplicate references..........................\\nSnapshot resolved.\\nStarted HTTP server on port 7000\\nServer is ready.\\n\")])])]),s(\"p\",[t._v(\"访问 \"),s(\"a\",{attrs:{href:\"http://localhost:7000/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://localhost:7000/\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-6-jstack-生成虚拟机当前时刻的线程快照\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-6-jstack-生成虚拟机当前时刻的线程快照\"}},[t._v(\"#\")]),t._v(\" 1.6 \"),s(\"strong\",[t._v(\"jstack\")]),t._v(\" :生成虚拟机当前时刻的线程快照\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"jstack\")]),t._v(\"（Stack Trace for Java）命令用于生成虚拟机当前时刻的线程快照。线程快照就是当前虚拟机内每一条线程正在执行的方法堆栈的集合.\")]),t._v(\" \"),s(\"p\",[t._v(\"生成线程快照的目的主要是定位线程长时间出现停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等都是导致线程长时间停顿的原因。线程出现停顿的时候通过\"),s(\"code\",[t._v(\"jstack\")]),t._v(\"来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做些什么事情，或者在等待些什么资源。\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"下面是一个线程死锁的代码。我们下面会通过 jstack 命令进行死锁检查，输出死锁信息，找到发生死锁的线程\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"DeadLockDemo\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" resource1 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//资源 1\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" resource2 \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//资源 2\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resource1\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"get resource1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"try\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sleep\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"InterruptedException\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printStackTrace\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"waiting get resource2\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resource2\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"get resource2\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"线程 1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"start\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"->\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resource2\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"get resource2\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"try\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sleep\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"InterruptedException\")]),t._v(\" e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"printStackTrace\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"waiting get resource1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"synchronized\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resource1\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"System\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"out\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"println\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Thread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"currentThread\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"get resource1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n                \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"线程 2\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"start\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"Output\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Thread[线程 1,5,main]get resource1\\nThread[线程 2,5,main]get resource2\\nThread[线程 1,5,main]waiting get resource2\\nThread[线程 2,5,main]waiting get resource1\\n\")])])]),s(\"p\",[t._v(\"线程 A 通过 synchronized (resource1) 获得 resource1 的监视器锁，然后通过\"),s(\"code\",[t._v(\"Thread.sleep(1000);\")]),t._v(\"让线程 A 休眠 1s 为的是让线程 B 得到执行然后获取到 resource2 的监视器锁。线程 A 和线程 B 休眠结束了都开始企图请求获取对方的资源，然后这两个线程就会陷入互相等待的状态，这也就产生了死锁。\")]),t._v(\" \"),s(\"p\",[s(\"strong\",[t._v(\"通过 jstack 命令分析：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"C:\\\\Users\\\\SnailClimb>jps\\n13792 KotlinCompileDaemon\\n7360 NettyClient2\\n17396\\n7972 Launcher\\n8932 Launcher\\n9256 DeadLockDemo\\n10764 Jps\\n17340 NettyServer\\n\\nC:\\\\Users\\\\SnailClimb>jstack 9256\\n\")])])]),s(\"p\",[t._v(\"输出的部分内容如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('Found one Java-level deadlock:\\n=============================\\n\"线程 2\":\\n  waiting to lock monitor 0x000000000333e668 (object 0x00000000d5efe1c0, a java.lang.Object),\\n  which is held by \"线程 1\"\\n\"线程 1\":\\n  waiting to lock monitor 0x000000000333be88 (object 0x00000000d5efe1d0, a java.lang.Object),\\n  which is held by \"线程 2\"\\n\\nJava stack information for the threads listed above:\\n===================================================\\n\"线程 2\":\\n        at DeadLockDemo.lambda$main$1(DeadLockDemo.java:31)\\n        - waiting to lock <0x00000000d5efe1c0> (a java.lang.Object)\\n        - locked <0x00000000d5efe1d0> (a java.lang.Object)\\n        at DeadLockDemo$$Lambda$2/1078694789.run(Unknown Source)\\n        at java.lang.Thread.run(Thread.java:748)\\n\"线程 1\":\\n        at DeadLockDemo.lambda$main$0(DeadLockDemo.java:16)\\n        - waiting to lock <0x00000000d5efe1d0> (a java.lang.Object)\\n        - locked <0x00000000d5efe1c0> (a java.lang.Object)\\n        at DeadLockDemo$$Lambda$1/1324119927.run(Unknown Source)\\n        at java.lang.Thread.run(Thread.java:748)\\n\\nFound 1 deadlock.\\n')])])]),s(\"p\",[t._v(\"可以看到 \"),s(\"code\",[t._v(\"jstack\")]),t._v(\" 命令已经帮我们找到发生死锁的线程的具体信息。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-jdk-可视化分析工具\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-jdk-可视化分析工具\"}},[t._v(\"#\")]),t._v(\" 2. JDK 可视化分析工具\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"isual-vm-多合一故障处理工具\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#isual-vm-多合一故障处理工具\"}},[t._v(\"#\")]),t._v(\" isual VM:多合一故障处理工具\")]),t._v(\" \"),s(\"p\",[t._v(\"VisualVM 提供在 Java 虚拟机 (Java Virutal Machine, JVM) 上运行的 Java 应用程序的详细信息。在 VisualVM 的图形用户界面中，您可以方便、快捷地查看多个 Java 应用程序的相关信息。Visual VM 官网：\"),s(\"a\",{attrs:{href:\"https://visualvm.github.io/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://visualvm.github.io/\"),s(\"OutboundLink\")],1),t._v(\" 。Visual VM 中文文档:\"),s(\"a\",{attrs:{href:\"https://visualvm.github.io/documentation.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://visualvm.github.io/documentation.html\"),s(\"OutboundLink\")],1),t._v(\"。\")]),t._v(\" \"),s(\"p\",[t._v(\"下面这段话摘自《深入理解 Java 虚拟机》。\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"VisualVM（All-in-One Java Troubleshooting Tool）是到目前为止随 JDK 发布的功能最强大的运行监视和故障处理程序，官方在 VisualVM 的软件说明中写上了“All-in-One”的描述字样，预示着他除了运行监视、故障处理外，还提供了很多其他方面的功能，如性能分析（Profiling）。VisualVM 的性能分析功能甚至比起 JProfiler、YourKit 等专业且收费的 Profiling 工具都不会逊色多少，而且 VisualVM 还有一个很大的优点：不需要被监视的程序基于特殊 Agent 运行，因此他对应用程序的实际性能的影响很小，使得他可以直接应用在生产环境中。这个优点是 JProfiler、YourKit 等工具无法与之媲美的。\")])]),t._v(\" \"),s(\"p\",[t._v(\"VisualVM 基于 NetBeans 平台开发，因此他一开始就具备了插件扩展功能的特性，通过插件扩展支持，VisualVM 可以做到：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"显示虚拟机进程以及进程的配置、环境信息（jps、jinfo）。\")])]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"监视应用程序的 CPU、GC、堆、方法区以及线程的信息（jstat、jstack）。\")])]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"dump 以及分析堆转储快照（jmap、jhat）。\")])]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"方法级的程序运行性能分析，找到被调用最多、运行时间最长的方法。\")])]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"离线程序快照：收集程序的运行时配置、线程 dump、内存 dump 等信息建立一个快照，可以将快照发送开发者处进行 Bug 反馈。\")])]),t._v(\" \"),s(\"li\",[s(\"strong\",[t._v(\"其他 plugins 的无限的可能性......\")])])]),t._v(\" \"),s(\"p\",[t._v(\"这里就不具体介绍 VisualVM 的使用，如果想了解的话可以看:\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"a\",{attrs:{href:\"https://visualvm.github.io/documentation.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://visualvm.github.io/documentation.html\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"li\",[s(\"a\",{attrs:{href:\"https://www.ibm.com/developerworks/cn/java/j-lo-visualvm/index.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://www.ibm.com/developerworks/cn/java/j-lo-visualvm/index.html\"),s(\"OutboundLink\")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}