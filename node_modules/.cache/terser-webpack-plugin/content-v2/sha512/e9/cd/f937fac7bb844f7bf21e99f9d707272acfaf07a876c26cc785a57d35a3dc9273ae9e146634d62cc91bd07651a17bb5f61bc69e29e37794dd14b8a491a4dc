{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[419],{937:function(t,a,s){\"use strict\";s.r(a);var r=s(42),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"汇总数据-聚集函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#汇总数据-聚集函数\"}},[t._v(\"#\")]),t._v(\" 汇总数据（聚集函数）\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-sql-聚集函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-sql-聚集函数\"}},[t._v(\"#\")]),t._v(\" 1. SQL 聚集函数\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"函数\")]),t._v(\" \"),s(\"th\",[t._v(\"说明\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"AVG()\")]),t._v(\" \"),s(\"td\",[t._v(\"返回某列的平均值\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"COUNT()\")]),t._v(\" \"),s(\"td\",[t._v(\"返回某列的行数\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"MAX()\")]),t._v(\" \"),s(\"td\",[t._v(\"返回某列的最大值\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"MIN()\")]),t._v(\" \"),s(\"td\",[t._v(\"返回某列的最小值\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"SUM()\")]),t._v(\" \"),s(\"td\",[t._v(\"返回某列值之和\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-1-avg-平均值函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-avg-平均值函数\"}},[t._v(\"#\")]),t._v(\" 1.1 AVG() 平均值函数\")]),t._v(\" \"),s(\"p\",[t._v(\"AVG() 对表中行数计算并计算其列值之和，求得该列的平均值。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"# 所有产品的平均价格\\nSELECT AVG(prod_price) AS avg_price\\nFROM Products;\\n\")])])]),s(\"p\",[t._v(\"AVG函数将忽略null 的行\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-2-count-函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-count-函数\"}},[t._v(\"#\")]),t._v(\" 1.2 COUNT() 函数\")]),t._v(\" \"),s(\"p\",[t._v(\"COUNT()确定表中的行数目或符合特定条件的行的数目\")]),t._v(\" \"),s(\"p\",[t._v(\"·\"),s(\"strong\",[t._v(\"两种使用方式\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"使用COUNT(*)对表中行的数目进行计算，\"),s(\"strong\",[t._v(\"不管表列中包含的是空值（NULL）还是非空值\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT COUNT(*) AS num_cust\\nFROM Customers;\\n\")])])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"使用COUNT(column)对特定列中具有值的行进行计数，\"),s(\"strong\",[t._v(\"忽略NULL\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT COUNT(cust_email) AS num_cust\\nFROM Customers;\\n\")])])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-3-max-函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-max-函数\"}},[t._v(\"#\")]),t._v(\" 1.3 MAX() 函数\")]),t._v(\" \"),s(\"p\",[t._v(\"MAX()返回指定列的最大值，MAX()要求指定列名\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT MAX(prod_price) AS max_price\\nFROM Products;\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"MAX（） 一般用来找出最大的数值或日期值，对于文本返回该列排序后的最后一行\")]),t._v(\" \"),s(\"li\",[t._v(\"MAX() 忽略值为NULL 的行\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-4-min-函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4-min-函数\"}},[t._v(\"#\")]),t._v(\" 1.4 MIN() 函数\")]),t._v(\" \"),s(\"p\",[t._v(\"MIN() 返回指定列的最小值\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT MIN(prod_price) AS min_price\\nFROM Products;\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-5-sum-函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-5-sum-函数\"}},[t._v(\"#\")]),t._v(\" 1.5 SUM() 函数\")]),t._v(\" \"),s(\"p\",[t._v(\"SUM() 返回指定列值的和（总和）\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT SUM(quantity) AS items_ordered\\nFROM OrderItems\\nWHERE order_num = 20005;\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"SUM 忽略NULL值\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-sql-聚集不同值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-sql-聚集不同值\"}},[t._v(\"#\")]),t._v(\" 2. SQL 聚集不同值\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"对所有行执行计算，指定ALL参数或不指定参数（ALL 是默认行为）\")]),t._v(\" \"),s(\"li\",[t._v(\"只包含不同值，指定DISTINCT\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT AVG(DISTINCT prod_price) AS avg_price\\nFROM Products\\nWHERE vend_id ='DLL01';\\n\")])])]),s(\"h2\",{attrs:{id:\"_3-组合聚集函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-组合聚集函数\"}},[t._v(\"#\")]),t._v(\" 3. 组合聚集函数\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"SELECT COUNT(*) AS num_items,\\n\\t\\tMIN(prod_price) AS price_min,\\n\\t\\tMAX(prod_price) AS price_max,\\n\\t\\tAVG(prod_price) AS price_avg\\nFROM Products;\\n\")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);","extractedComments":[]}