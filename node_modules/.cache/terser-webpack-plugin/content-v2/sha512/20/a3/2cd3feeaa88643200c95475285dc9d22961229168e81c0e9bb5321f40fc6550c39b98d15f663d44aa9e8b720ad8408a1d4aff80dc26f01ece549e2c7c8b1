{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{1044:function(s,a,t){\"use strict\";t.r(a);var n=t(42),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"类加载器-常见面试\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类加载器-常见面试\"}},[s._v(\"#\")]),s._v(\" 类加载器（常见面试）\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"面试官-请说说你理解的类加载器。\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试官-请说说你理解的类加载器。\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"面试官：请说说你理解的类加载器。\")])]),s._v(\" \"),n(\"hr\"),s._v(\" \"),n(\"p\",[s._v(\"我：通过一个类的\"),n(\"strong\",[s._v(\"全限定名来获取描述此类的二进制字节流\")]),s._v(\"这个动作放到\"),n(\"strong\",[s._v(\"Java虚拟机外部去实现\")]),s._v(\"，以便让应用程序\"),n(\"strong\",[s._v(\"自己决定\")]),s._v(\"如何去获取所需要的类。实现这个动作的代码模块称为**“类加载器”**。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"面试官-说说有哪几种类加载器-他们的职责分别是什么-他们之前存在什么样的约定。\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试官-说说有哪几种类加载器-他们的职责分别是什么-他们之前存在什么样的约定。\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"面试官：说说有哪几种类加载器，他们的职责分别是什么，他们之前存在什么样的约定。\")])]),s._v(\" \"),n(\"hr\"),s._v(\" \"),n(\"p\",[s._v(\"我：emmmm，我在纸上边画边讲吧。\")]),s._v(\" \"),n(\"p\",[s._v(\"类加载的结构如下：\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:t(447),alt:\"image-20190929221807667\"}})]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"BootstrapClassLoader\")]),s._v(\"：启动类类加载器，它用来加载<JAVA_HOME>/jre/lib路径,**-**Xbootclasspath参数指定的路径以<JAVA_HOME>/jre/classes中的类。BootStrapClassLoader是由c++实现的。\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"ExtClassLoader\")]),s._v(\"：拓展类类加载器，它用来加载<JAVA_HOME>/jre/lib/ext路径以及java.ext.dirs系统变量指定的类路径下的类。\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"AppClassLoader\")]),s._v(\"：应用程序类类加载器，它主要加载应用程序ClassPath下的类（包含jar包中的类）。它是java应用程序默认的类加载器。\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"用户自定义类加载器\")]),s._v(\"：用户根据自定义需求，自由的定制加载的逻辑，继承ClassLoader，仅仅覆盖findClass（）即将继续遵守双亲委派模型。\")]),s._v(\" \"),n(\"p\",[s._v(\"在虚拟机启动的时候会初始化BootstrapClassLoader，然后在Launcher类中去加载ExtClassLoader、AppClassLoader，并将AppClassLoader的parent设置为ExtClassLoader，并设置线程上下文类加载器。\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"Launcher\")]),s._v(\"是JRE中用于启动程序入口main()的类，让我们看下Launcher的代码\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('\\npublic Launcher() {\\n        Launcher.ExtClassLoader var1;\\n        try {\\n            //加载扩展类类加载器\\n            var1 = Launcher.ExtClassLoader.getExtClassLoader();\\n        } catch (IOException var10) {\\n            throw new InternalError(\"Could not create extension class loader\", var10);\\n        }\\n\\n        try {\\n            //加载应用程序类加载器，并设置parent为extClassLoader\\n            this.loader = Launcher.AppClassLoader.getAppClassLoader(var1);\\n        } catch (IOException var9) {\\n            throw new InternalError(\"Could not create application class loader\", var9);\\n        }\\n        //设置默认的线程上下文类加载器为AppClassLoader\\n        Thread.currentThread().setContextClassLoader(this.loader);\\n        //此处删除无关代码。。。\\n        }\\n')])])]),n(\"p\",[s._v(\"上面画的几种类加载器是遵循\"),n(\"strong\",[s._v(\"双亲委派模型\")]),s._v(\"的，其实就是，当一个类加载器去加载类时先尝试让父类加载器去加载，如果父类加载器加载不了再尝试自身加载。这也是我们在自定义ClassLoader时java官方建议遵守的约定。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"面试官插嘴-extclassloader为什么没有设置parent\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试官插嘴-extclassloader为什么没有设置parent\"}},[s._v(\"#\")]),s._v(\" **面试官插嘴：**ExtClassLoader为什么没有设置parent？\")]),s._v(\" \"),n(\"p\",[s._v(\"让我们看看下面代码的输出结果\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-java extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[n(\"code\",[s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"static\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"main\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" args\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throws\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ClassNotFoundException\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ClassLoader\")]),s._v(\" classLoader \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Test\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getClassLoader\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"classLoader\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"classLoader\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getParent\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"classLoader\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getParent\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getParent\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"看看结果是啥\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-java extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[n(\"code\",[s._v(\"sun\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"misc\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Launcher\")]),s._v(\"$\"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"AppClassLoader\")]),n(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@18b4aac2\")]),s._v(\"\\nsun\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"misc\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Launcher\")]),s._v(\"$\"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ExtClassLoader\")]),n(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@5a61f5df\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"因为BootstrapClassLoader是由c++实现的，所以并不存在一个Java的类，因此会打印出null，所以在ClassLoader中，null就代表了BootStrapClassLoader（有些片面）。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"双亲委派模型的好处\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双亲委派模型的好处\"}},[s._v(\"#\")]),s._v(\" 双亲委派模型的好处\")]),s._v(\" \"),n(\"p\",[s._v(\"双亲委派模型能\"),n(\"strong\",[s._v(\"保证基础类仅加载一次\")]),s._v(\"，不会让jvm中存在重名的类。比如String.class，每次加载都委托给父加载器，最终都是BootstrapClassLoader，都保证java核心类都是BootstrapClassLoader加载的，保证了java的安全与稳定性。\")]),s._v(\" \"),n(\"p\",[s._v(\"API不会被篡改\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"面试官-那自己怎么去实现一个classloader呢-请举个实际的例子。\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试官-那自己怎么去实现一个classloader呢-请举个实际的例子。\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"面试官：那自己怎么去实现一个ClassLoader呢？请举个实际的例子。\")])]),s._v(\" \"),n(\"hr\"),s._v(\" \"),n(\"p\",[s._v(\"我：好的（脸上笑嘻嘻，心里mmp）。\")]),s._v(\" \"),n(\"p\",[s._v(\"自己实现ClassLoader时只需要继承ClassLoader类，然后覆盖findClass（String name）方法即可完成一个带有双亲委派模型的类加载器。\")]),s._v(\" \"),n(\"p\",[s._v(\"我们看下ClassLoader#loadClass的代码\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-java extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[n(\"code\",[s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"protected\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Class\")]),n(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"?\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"loadClass\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"boolean\")]),s._v(\" resolve\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throws\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ClassNotFoundException\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"synchronized\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getClassLoadingLock\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 查看是否已经加载过该类，加载过的类会有缓存，是使用native方法实现的\")]),s._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Class\")]),n(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"?\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"findLoadedClass\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"long\")]),s._v(\" t0 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"nanoTime\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"try\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//父类不为空则先让父类加载\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"parent \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                        c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" parent\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"loadClass\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//父类是null就是BootstrapClassLoader，使用启动类类加载器加载\")]),s._v(\"\\n                        c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"findBootstrapClassOrNull\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"catch\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ClassNotFoundException\")]),s._v(\" e\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 父类类加载器不能加载该类\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//如果父类未加载该类\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// If still not found, then invoke findClass in order\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// to find the class.\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"long\")]),s._v(\" t1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"nanoTime\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//让当前类加载器加载\")]),s._v(\"\\n                    c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"findClass\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" c\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"经典的模板方法模式，子类只需要实现findClass，关心从哪里加载即可。\")]),s._v(\" \"),n(\"p\",[s._v(\"还有一点，parent需要自己设置哦，可以放在构造函数做这个事情。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"面试官插嘴-为什么不继承appclassloader呢\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面试官插嘴-为什么不继承appclassloader呢\"}},[s._v(\"#\")]),s._v(\" **面试官插嘴：**为什么不继承AppClassLoader呢？\")]),s._v(\" \"),n(\"p\",[s._v(\"我：因为它和ExtClassLoader都是Launcher的静态类，都是包访问路径权限的。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"参考文章\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文章\"}},[s._v(\"#\")]),s._v(\" 参考文章\")]),s._v(\" \"),n(\"p\",[n(\"a\",{attrs:{href:\"https://zhuanlan.zhihu.com/p/54693308\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"好怕怕的\"),n(\"em\",[s._v(\"类加载器\")]),n(\"OutboundLink\")],1)])])}),[],!1,null,null,null);a.default=e.exports},447:function(s,a,t){s.exports=t.p+\"assets/img/image-20190929221807667.9bde029d.png\"}}]);","extractedComments":[]}