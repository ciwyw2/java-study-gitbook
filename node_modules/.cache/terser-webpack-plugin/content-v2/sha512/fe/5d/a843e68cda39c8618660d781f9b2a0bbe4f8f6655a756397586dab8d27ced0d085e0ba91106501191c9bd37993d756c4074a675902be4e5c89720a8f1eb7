{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{1277:function(t,a,r){\"use strict\";r.r(a);var e=r(42),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"服务网关spring-cloud-gateway基础\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务网关spring-cloud-gateway基础\"}},[t._v(\"#\")]),t._v(\" 服务网关Spring Cloud GateWay基础\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_1-与zuul-1-x-优势\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-与zuul-1-x-优势\"}},[t._v(\"#\")]),t._v(\" 1. 与zuul（1.x）优势\")]),t._v(\" \"),e(\"p\",[t._v(\"zuul（1.0）基于Servlet,使用阻塞API，且不支持长连接，如WebSockets\")]),t._v(\" \"),e(\"p\",[t._v(\"优势：\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"使用非阻塞 API\")]),t._v(\" \"),e(\"li\",[t._v(\"支持 WebSockets\")]),t._v(\" \"),e(\"li\",[t._v(\"支持限流等新特性\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_2-背景\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-背景\"}},[t._v(\"#\")]),t._v(\" 2. 背景\")]),t._v(\" \"),e(\"p\",[t._v(\"Spring Cloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。\")]),t._v(\" \"),e(\"p\",[t._v(\"Spring Cloud Gateway 作为Spring Cloud 生态系统中的网关，\"),e(\"strong\",[t._v(\"目标是替代Netflix Zuul\")]),t._v(\"。其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/指标，和限流。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_3-相关概念\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-相关概念\"}},[t._v(\"#\")]),t._v(\" 3.相关概念\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Route（路由）：这是网关的基本构建模块。它由一个ID，一个目标URL，一组断言和一组过滤器定义组成。如果断言为真，则路由匹配\")]),t._v(\" \"),e(\"li\",[t._v(\"Predicate（断言）：这是一个 Java8 的 Predicate。输入类型是ServerWebExchange。我们可以使用他来匹配来自Http请求的任何内容。例如headers或参数\")]),t._v(\" \"),e(\"li\",[t._v(\"Filter(过滤器)：这是\"),e(\"code\",[t._v(\"org.springframework.cloud.gateway.filter.GatewayFilter\")]),t._v(\"的实例，我们可以使用它修改请求和响应。\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_4-工作流程\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-工作流程\"}},[t._v(\"#\")]),t._v(\" 4. 工作流程\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:r(698),alt:\"image-20200118122919783\"}})]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"客户端向 Spring Cloud Gateway 发出请求。\")]),t._v(\" \"),e(\"li\",[t._v(\"如果Gateway handler Mapping 中找到与请求相匹配的路由，\")]),t._v(\" \"),e(\"li\",[t._v(\"将其发送到Gateway Web Handler。\")]),t._v(\" \"),e(\"li\",[t._v(\"Handler 再通过指定的过滤器链来将请求发送到我们实际的服务执行业务逻辑\")]),t._v(\" \"),e(\"li\",[t._v(\"过滤器之间用虚线分开是因为过滤器可能会发送代理请求之前（“pre”）或之后（“post”）执行业务逻辑。\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_5-spring-cloud-gateway-的特征\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-spring-cloud-gateway-的特征\"}},[t._v(\"#\")]),t._v(\" 5. Spring Cloud Gateway 的特征\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"基于 Spring Framework 5，Project Reactor 和 Spring Boot 2.0\")]),t._v(\" \"),e(\"li\",[t._v(\"动态路由\")]),t._v(\" \"),e(\"li\",[t._v(\"Predicates 和 Filters 作用于特定路由\")]),t._v(\" \"),e(\"li\",[t._v(\"集成 Hystrix 断路器\")]),t._v(\" \"),e(\"li\",[t._v(\"集成 Spring Cloud DiscoveryClient\")]),t._v(\" \"),e(\"li\",[t._v(\"易于编写的 Predicates 和 Filters\")]),t._v(\" \"),e(\"li\",[t._v(\"限流\")]),t._v(\" \"),e(\"li\",[t._v(\"路径重写\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"参考文章\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文章\"}},[t._v(\"#\")]),t._v(\" 参考文章\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"http://www.ityouknow.com/springcloud/2018/12/12/spring-cloud-gateway-start.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"springcloud(十五)：服务网关 Spring Cloud GateWay 入门\"),e(\"OutboundLink\")],1)])])}),[],!1,null,null,null);a.default=_.exports},698:function(t,a,r){t.exports=r.p+\"assets/img/image-20200118122919783.f0002104.png\"}}]);","extractedComments":[]}