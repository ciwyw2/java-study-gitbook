{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{875:function(t,a,e){t.exports=e.p+\"assets/img/image-20190907201354004.1199ebe2.png\"},896:function(t,a,e){\"use strict\";e.r(a);var s=e(42),l=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"gitlab搭建\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gitlab搭建\"}},[t._v(\"#\")]),t._v(\" gitlab搭建\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-搭建方式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-搭建方式\"}},[t._v(\"#\")]),t._v(\" 1. 搭建方式\")]),t._v(\" \"),s(\"p\",[t._v(\"gitlab 搭建有两种方式\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"第一种方法\")]),t._v(\" \"),s(\"p\",[t._v(\"说白了其实gitlab就是一个web端，打散后其实也是由（nginx，gitaly，redis，gitlab-workhorse...）等这些东西构成；所以你可以一个个组装一个个编译安装；这样你也可以深入去了解gitlab，同时也可以达到最简化（将不必要的东西去掉）\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第二种方法\")]),t._v(\" \"),s(\"p\",[t._v(\"rpm 安装。。。官方和社区都有提供\")])])]),t._v(\" \"),s(\"p\",[t._v(\"第一种太折腾人了，本文演示第二种方式\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-安装\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-安装\"}},[t._v(\"#\")]),t._v(\" 2. 安装\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-安装并配置必要的依赖关系\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-安装并配置必要的依赖关系\"}},[t._v(\"#\")]),t._v(\" 2.1 安装并配置必要的依赖关系\")]),t._v(\" \"),s(\"p\",[t._v(\"在 CentOS 系统上，下面的命令将会打开系统防火墙 HTTP 和 SSH 的访问。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"sudo yum install curl policycoreutils openssh-server openssh-clients\\nsudo systemctl enable sshd\\nsudo systemctl start sshd\\nsudo yum install postfix\\nsudo systemctl enable postfix\\nsudo systemctl start postfix\\nsudo firewall-cmd --permanent --add-service=http\\nsudo systemctl reload firewalld\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-2-添加-gitlab-镜像源并安装\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-添加-gitlab-镜像源并安装\"}},[t._v(\"#\")]),t._v(\" 2.2  添加 GitLab 镜像源并安装\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"方式1：命令管道的方式安装镜像仓库\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"curl -sS http://packages.gitlab.com.cn/install/gitlab-ce/script.rpm.sh | sudo bash\\nsudo yum install gitlab-ce\\n\")])])]),s(\"p\",[t._v(\"我使用不成功\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"方式2：使用命名手动安装\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"curl -LJO https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-XXX.rpm\\nrpm -i gitlab-ce-XXX.rpm\\n\")])])]),s(\"p\",[t._v(\"gitlab-ce-xxx.rpm 具体是哪个版本可以进\"),s(\"a\",{attrs:{href:\"https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"gitlab镜像\"),s(\"OutboundLink\")],1),t._v(\"中选择\")])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_2-2-1-安装时异常\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-1-安装时异常\"}},[t._v(\"#\")]),t._v(\" 2.2.1 安装时异常\")]),t._v(\" \"),s(\"p\",[t._v(\"在使用命令rpm -i gitlab-ce-XXX.rpm 时提示\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"rpm -i gitlab-ce-12.2.4-ce.0.el7.x86_64.rpm\\nwarning: gitlab-ce-12.2.4-ce.0.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f27eab47: NOKEY\\nerror: Failed dependencies:\\n\\tpolicycoreutils-python is needed by gitlab-ce-12.2.4-ce.0.el7.x86_64\\n\")])])]),s(\"p\",[t._v(\"需要安装\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"yum install policycoreutils-python\\n\")])])]),s(\"h4\",{attrs:{id:\"_2-2-2-安装完成提示\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-2-安装完成提示\"}},[t._v(\"#\")]),t._v(\" 2.2.2 安装完成提示\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"[root@iZwz97t3ru69kye3l7uj70Z ~]# rpm -i gitlab-ce-12.2.4-ce.0.el7.x86_64.rpm\\nwarning: gitlab-ce-12.2.4-ce.0.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f27eab47: NOKEY\\nIt looks like GitLab has not been configured yet; skipping the upgrade script.\\n\\n       *.                  *.\\n      ***                 ***\\n     *****               *****\\n    .******             *******\\n    ********            ********\\n   ,,,,,,,,,***********,,,,,,,,,\\n  ,,,,,,,,,,,*********,,,,,,,,,,,\\n  .,,,,,,,,,,,*******,,,,,,,,,,,,\\n      ,,,,,,,,,*****,,,,,,,,,.\\n         ,,,,,,,****,,,,,,\\n            .,,,***,,,,\\n                ,*,.\\n\\n\\n\\n     _______ __  __          __\\n    / ____(_) /_/ /   ____ _/ /_\\n   / / __/ / __/ /   / __ `/ __ \\\\\\n  / /_/ / / /_/ /___/ /_/ / /_/ /\\n  \\\\____/_/\\\\__/_____/\\\\__,_/_.___/\\n\\n\\nThank you for installing GitLab!\\nGitLab was unable to detect a valid hostname for your instance.\\nPlease configure a URL for your GitLab instance by setting `external_url`\\nconfiguration in /etc/gitlab/gitlab.rb file.\\nThen, you can start your GitLab instance by running the following command:\\n  sudo gitlab-ctl reconfigure\\n\\nFor a comprehensive list of configuration options please see the Omnibus GitLab readme\\nhttps://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-3-配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-配置\"}},[t._v(\"#\")]),t._v(\" 2.3 配置\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"_2-3-1-配置外网访问的地址-必须改\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-1-配置外网访问的地址-必须改\"}},[t._v(\"#\")]),t._v(\" 2.3.1 配置外网访问的地址(必须改)\")]),t._v(\" \"),s(\"p\",[t._v(\"修改/etc/gitlab/gitlab.rb，将默认external_url改成，你的ip或者域名\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"external_url 'http://gitlab.isture.com'\\n#external_url 'http://120.79.200.xxx'\\n\")])])]),s(\"h4\",{attrs:{id:\"_2-3-2-nginx端口冲突\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-2-nginx端口冲突\"}},[t._v(\"#\")]),t._v(\" 2.3.2 nginx端口冲突\")]),t._v(\" \"),s(\"p\",[t._v(\"gitlab 其实是个web，他自带了nginx。但是我们本身服务器也有一个nginx这样就冲突了\")]),t._v(\" \"),s(\"h5\",{attrs:{id:\"_2-3-2-1-解决方案\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-2-1-解决方案\"}},[t._v(\"#\")]),t._v(\" 2.3.2.1 解决方案\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"第一种（不建议）\")]),t._v(\" \"),s(\"p\",[t._v(\"禁用gitlab自带的nginx，使用我们自己安装的nginx\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第二种\")]),t._v(\" \"),s(\"p\",[t._v(\"更改gitlab 自带的nginx的默认端口，域名加端口访问。\")]),t._v(\" \"),s(\"p\",[t._v(\"如果有强迫症，可以在自己的服务器nginx映射到gitlab 的nginx就好了\")])])]),t._v(\" \"),s(\"h5\",{attrs:{id:\"_2-3-2-2-修改配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-2-2-修改配置\"}},[t._v(\"#\")]),t._v(\" 2.3.2.2 修改配置\")]),t._v(\" \"),s(\"p\",[t._v(\"修改/etc/gitlab/gitlab.rb的端口配置\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\" nginx['listen_port'] = 9999\\n\")])])]),s(\"h4\",{attrs:{id:\"_2-3-3-修改gitlab数据存储路径-非必选\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-3-修改gitlab数据存储路径-非必选\"}},[t._v(\"#\")]),t._v(\" 2.3.3 修改Gitlab数据存储路径（非必选）\")]),t._v(\" \"),s(\"p\",[t._v(\"默认的Gitlab数据存储路径在\"),s(\"code\",[t._v(\"/var/opt/gitlab/git-data\")])]),t._v(\" \"),s(\"p\",[t._v(\"修改/etc/gitlab/gitlab.rb\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('###!   path that doesn\\'t contain symlinks.**\\n# git_data_dirs({\\n#   \"default\" => {\\n#     \"path\" => \"你需要放置的路径\"\\n#    }\\n# })\\n')])])]),s(\"h3\",{attrs:{id:\"_2-4-启用配置并启动gitlab\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-4-启用配置并启动gitlab\"}},[t._v(\"#\")]),t._v(\" 2.4 启用配置并启动GitLab\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"sudo gitlab-ctl reconfigure\\n\")])])]),s(\"p\",[t._v(\"其他gitlab 命令\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"sudo gitlab-ctl reconfigure\\nsudo gitlab-ctl restart\\nsudo gitlab-ctl status\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-5-浏览器打开配置的地址\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-5-浏览器打开配置的地址\"}},[t._v(\"#\")]),t._v(\" 2.5 浏览器打开配置的地址\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"在第一次访问时，将被重定向到密码重置页面\")]),t._v(\" \"),s(\"p\",[t._v(\"默认账户是root，密码在此页面设置\")])])]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:e(875),alt:\"image-20190907201354004\"}})]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_3-常用的几个gitlab命令\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-常用的几个gitlab命令\"}},[t._v(\"#\")]),t._v(\" 3. 常用的几个Gitlab命令\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"# 重新应用gitlab的配置,每次修改/etc/gitlab/gitlab.rb文件之后执行\\nsudo gitlab-ctl reconfigure\\n\\n# 启动gitlab服务\\nsudo gitlab-ctl start\\n\\n# 重启gitlab服务\\nsudo gitlab-ctl restart\\n\\n# 查看gitlab运行状态\\nsudo gitlab-ctl status\\n\\n#停止gitlab服务\\nsudo gitlab-ctl stop\\n\\n# 查看gitlab运行所有日志\\nsudo gitlab-ctl tail\\n\\n#查看 nginx 访问日志\\nsudo gitlab-ctl tail nginx/gitlab_acces.log \\n\\n#查看 postgresql 日志\\nsudo gitlab-ctl tail postgresql \\n\\n# 停止相关数据连接服务\\ngitlab-ctl stop unicorn\\ngitlab-ctl stop sidekiq\\n\\n# 系统信息监测\\ngitlab-rake gitlab:env:info       \\n\\n\")])])]),s(\"h2\",{attrs:{id:\"_4-gitlab相关目录\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-gitlab相关目录\"}},[t._v(\"#\")]),t._v(\" 4. gitlab相关目录\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"/var/opt/gitlab/git-data/repositories/root：库默认存储目录\")]),t._v(\" \"),s(\"li\",[t._v(\"/opt/gitlab：是gitlab的应用代码和相应的依赖程序\")]),t._v(\" \"),s(\"li\",[t._v(\"/var/opt/gitlab：此目录下是运行gitlab-ctl reconfigure命令编译后的应用数据和配置文件，不需要人为修改配置\")]),t._v(\" \"),s(\"li\",[t._v(\"/etc/gitlab：此目录下存放了以omnibus-gitlab包安装方式时的配置文件，这里的配置文件才需要管理员手动编译配置\")]),t._v(\" \"),s(\"li\",[t._v(\"/var/log/gitlab：此目录下存放了gitlab各个组件产生的日志\")]),t._v(\" \"),s(\"li\",[t._v(\"/opt/gitlab/backups/：默认备份文件生成的目录\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"参考文章\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文章\"}},[t._v(\"#\")]),t._v(\" 参考文章\")]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://segmentfault.com/a/1190000011632220\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"搭建gitlab服务\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://blog.csdn.net/ouyang_peng/article/details/72903221\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"在CenterOS系统上安装GitLab并自定义域名访问GitLab管理页面\"),s(\"OutboundLink\")],1)])])}),[],!1,null,null,null);a.default=l.exports}}]);","extractedComments":[]}