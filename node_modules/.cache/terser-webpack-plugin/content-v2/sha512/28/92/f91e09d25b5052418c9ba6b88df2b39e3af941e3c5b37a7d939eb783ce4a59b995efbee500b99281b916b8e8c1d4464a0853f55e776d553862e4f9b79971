{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{1229:function(t,a,s){\"use strict\";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"springboot整合eureka\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springboot整合eureka\"}},[t._v(\"#\")]),t._v(\" SpringBoot整合Eureka\")]),t._v(\" \"),s(\"p\",[t._v(\"微服务注册中心的作用就是用于统一管理微服务实例，微服务间的调用只需要知道对方的服务名，而无需关注具体的IP 和端口，便于微服务架构的拓展和维护。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-创建一个springboot-项目\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-创建一个springboot-项目\"}},[t._v(\"#\")]),t._v(\" 1. 创建一个SpringBoot 项目\")]),t._v(\" \"),s(\"p\",[t._v(\"![image-20191114002801896](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191114002801896.png)\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-添加pom-依赖\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-添加pom-依赖\"}},[t._v(\"#\")]),t._v(\" 2. 添加POM 依赖\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-XML extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"dependency\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"groupId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"org.springframework.cloud\"),s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"</\")]),t._v(\"groupId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n   \"),s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"artifactId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"spring-cloud-starter-netflix-eureka-server\"),s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"</\")]),t._v(\"artifactId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"</\")]),t._v(\"dependency\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"_3-在启动类上使用-enableeurekaserver-注解\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-在启动类上使用-enableeurekaserver-注解\"}},[t._v(\"#\")]),t._v(\" 3. 在启动类上使用@EnableEurekaServer 注解\")]),t._v(\" \"),s(\"p\",[t._v(\"在启动类上使用@EnableEurekaServer 注解，用以开启Eureka服务端功能：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@EnableEurekaServer\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@SpringBootApplication\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"RegisterApplication\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"main\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" args\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SpringApplication\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"run\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"FebsRegisterApplication\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" args\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"_4-编写配置文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-编写配置文件\"}},[t._v(\"#\")]),t._v(\" 4. 编写配置文件\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-yml extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-yml\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"server\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"port\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8001\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"servlet\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"context-path\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" /register\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"spring\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"application\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"name\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" Register\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"eureka\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"instance\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"hostname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" localhost\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"client\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"register-with-eureka\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"false\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"fetch-registry\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"false\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"instance-info-replication-interval-seconds\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"30\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"serviceUrl\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"defaultZone\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" http\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"//$\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"eureka.instance.hostname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"$\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"server.port\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"$\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"server.servlet.context\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"path\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"/eureka/\\n\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"spring.application.name\")]),t._v(\"，定义服务名称为Register;\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"eureka.instance.hostname\")]),t._v(\"，指定了Eureka服务端的地址，因为我们是在本地搭建的，所以填写为\"),s(\"code\",[t._v(\"localhost\")]),t._v(\"即可；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"eureka.client.register-with-eureka\")]),t._v(\"，表示是否将服务注册到Eureka服务端，由于我们这里是单节点的Eureka服务端，所以这里指定false；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"eureka.client.fetch-registry\")]),t._v(\"，表示是否从Eureka服务端获取服务信息，因为这里是单节点的Eureka服务端，并不需要从别的Eureka服务端同步服务信息，所以这里设置为false；\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"eureka.client.instance-info-replication-interval-seconds\")]),t._v(\"，微服务更新实例信息的变化到Eureka服务端的间隔时间，单位为秒，这里指定为30秒（这就是微服务启动后，要过一会才能注册到Eureka服务端的原因）。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"eureka.client.serviceUrl.defaultZone\")]),t._v(\"，指定Eureka服务端的地址，这里为当前项目地址，即 http://localhost:8001/register/eureka/\")])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}