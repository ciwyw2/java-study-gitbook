{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{1049:function(t,s,a){\"use strict\";a.r(s);var e=a(42),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"表达性\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#表达性\"}},[t._v(\"#\")]),t._v(\" 表达性\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_1-定义\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-定义\"}},[t._v(\"#\")]),t._v(\" 1.定义\")]),t._v(\" \"),e(\"p\",[t._v(\"表达性（Representational）：REST 资源实际上可以用各种形式来进行表达，包括XML，JSON,甚至HTML\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"自己的理解\")])]),t._v(\" \"),e(\"p\",[t._v(\"同一资源。你可以使用JSON表达，也可以使用XML，如果你在浏览器中也可以使用HTML。\")]),t._v(\" \"),e(\"p\",[t._v(\"这个资源时没有变化的，只是他的表达形式变了。这就是REST 的表达性\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_2-将资源转换为客户端的表述形式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-将资源转换为客户端的表述形式\"}},[t._v(\"#\")]),t._v(\" 2.将资源转换为客户端的表述形式\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"内容协商（Content  negotiation）：\")]),t._v(\" \"),e(\"p\",[t._v(\"选择一个视图，他能够将模型渲染为呈现给客户端的表达形式\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"消息转换器（Message conversion）：\")]),t._v(\" \"),e(\"p\",[t._v(\"通过一个消息转换器将控制器所返回的对象转换为呈现给客户端的表达形式\")])])]),t._v(\" \"),e(\"p\",[t._v(\"###2.1 内容协商（Content  negotiation）\")]),t._v(\" \"),e(\"p\",[t._v(\"TODO\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_2-2-消息转换器-message-conversion\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-消息转换器-message-conversion\"}},[t._v(\"#\")]),t._v(\" 2.2 消息转换器（Message conversion）\")]),t._v(\" \"),e(\"p\",[t._v(\"更推荐使用此方式\")]),t._v(\" \"),e(\"p\",[t._v(\"当使用消息转换功能时，DispatcherServlet补在需要那么麻烦地将模型数据传递到视图中，实际上根本\"),e(\"strong\",[t._v(\"没有模型和视图\")]),t._v(\"，只有\"),e(\"strong\",[t._v(\"控制器产生的数据\")]),t._v(\"，以及消息转换器（message conversion）转换数据之后所产生的资源表达\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_2-2-1-spring-自带的各种转换器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-1-spring-自带的各种转换器\"}},[t._v(\"#\")]),t._v(\" 2.2.1 Spring 自带的各种转换器\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(836),alt:\"image-20190803145946199\"}})]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"假如客户端请求的\"),e(\"strong\",[t._v(\"Accept头信息\")]),t._v(\"表明他能接受”\"),e(\"strong\",[t._v(\"application/json\")]),t._v(\"“并且 \"),e(\"strong\",[t._v(\"Jackson JSON 在类路径\")]),t._v(\"下，那么处理方法返回的对象将交给 MappingJacksonHttpMessageConverter,并由他转换为返回客户端的JSON表达形式\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"如果请求头信息表明客户端想要”text/xml“格式，那么Jaxb2RootElementHttpMessageConverter 将会为客户端产生xml响应\")])])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_3-适配rest-api-的调整\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-适配rest-api-的调整\"}},[t._v(\"#\")]),t._v(\" 3.适配REST API 的调整\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_3-1在响应体返回资源状态\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1在响应体返回资源状态\"}},[t._v(\"#\")]),t._v(\" 3.1在响应体返回资源状态\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"正常情况\")]),t._v(\" \"),e(\"p\",[t._v(\"返回java对象会放在模型中并在视图中渲染使用\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"使用了消息转换功能后\")]),t._v(\" \"),e(\"p\",[t._v(\"需要告诉Spring 跳过正常的模型/视图流程，并使用消息转换\")]),t._v(\" \"),e(\"p\",[t._v(\"最简单的方式使用@ResponseBody注解\")])])]),t._v(\" \"),e(\"h4\",{attrs:{id:\"_3-1-1-responsebody注解\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-1-responsebody注解\"}},[t._v(\"#\")]),t._v(\" 3.1.1 @ResponseBody注解\")]),t._v(\" \"),e(\"p\",[t._v(\"会告诉Spring，我们将要返回的对象作为资源返回给客户端，并将其转换为客户端可接受的表述形式\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"DispatcherServlet 将会考虑请求中Accept 头部信息\")]),t._v(\" \"),e(\"li\",[t._v(\"并查找能为客户端提供所需表述形式的消息转换器\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_3-2-在请求体重接收资源状态\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-在请求体重接收资源状态\"}},[t._v(\"#\")]),t._v(\" 3.2 在请求体重接收资源状态\")]),t._v(\" \"),e(\"p\",[t._v(\"如何让控制器将客户端发送的JSON和XML 转换为他所使用的Java 对象？\")]),t._v(\" \"),e(\"p\",[t._v(\"答案是：@RequestBody 他能告诉Spring 查找一个消息转换器，将来自客户端的资源表述转换为对象\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"Spring会查看请求中的Content-Type 头部信息\")]),t._v(\" \"),e(\"li\",[t._v(\"并查找能够将请求体转换为java 对象的消息转换器\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_3-2-1-requestmapping的consumes属性\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-1-requestmapping的consumes属性\"}},[t._v(\"#\")]),t._v(\" 3.2.1 @RequestMapping的consumes属性\")]),t._v(\" \"),e(\"p\",[t._v(\"我们将其设置为”application/json“,他会告诉Spring 这个方法方法只处理ContentType头部信息为”application/json“的请求，无法满足条件的话，将由其他方法来处理请求\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_3-3-控制器设置默认转换\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-控制器设置默认转换\"}},[t._v(\"#\")]),t._v(\" 3.3 控制器设置默认转换\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"@RestController\")]),t._v(\" \"),e(\"p\",[t._v(\"不必为每个方法添加@ResponseBody.\")])])])])}),[],!1,null,null,null);s.default=_.exports},836:function(t,s,a){t.exports=a.p+\"assets/img/image-20190803145946199.edfb5577.png\"}}]);","extractedComments":[]}