{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[303],{1280:function(t,a,s){\"use strict\";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"zuul实战\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#zuul实战\"}},[t._v(\"#\")]),t._v(\" zuul实战\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-简单集成使用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-简单集成使用\"}},[t._v(\"#\")]),t._v(\" 1.  简单集成使用\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-1-添加依赖\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-添加依赖\"}},[t._v(\"#\")]),t._v(\" 1.1 添加依赖\")]),t._v(\" \"),s(\"p\",[t._v(\"​\\t引入zuul\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"<dependency>\\n   <groupId>org.springframework.cloud</groupId>\\n   <artifactId>spring-cloud-starter-netflix-zuul</artifactId>\\n</dependency>\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-2-配置文件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-配置文件\"}},[t._v(\"#\")]),t._v(\" 1.2. 配置文件\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\" spring.application.name=gateway-service-zuul\\n server.port=8888\\n \\n #这里的配置表示，访问/it/** 直接重定向到http://java.isture.com/\\n zuul.routes.baidu.path=/it/**\\n zuul.routes.baidu.url=http://java.isture.com/\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-3-启动类\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-启动类\"}},[t._v(\"#\")]),t._v(\" 1.3 启动类\")]),t._v(\" \"),s(\"p\",[t._v(\"启动类添加\"),s(\"code\",[t._v(\"@EnableZuulProxy\")]),t._v(\"，支持网关路由。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"@EnableZuulProxy\\n@SpringBootApplication\\npublic class ZuuldemoApplication {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tSpringApplication.run(ZuuldemoApplication.class, args);\\n\\t}\\n\\n}\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-4-测试\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4-测试\"}},[t._v(\"#\")]),t._v(\" 1.4 测试\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"启动项目，在浏览器中访问http://localhost:8888/it/spring-cloud，看到页面返回http://java.isture.com/\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2-zuul配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-zuul配置\"}},[t._v(\"#\")]),t._v(\" 2. zuul配置\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-yml extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-yml\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"zuul\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"routes\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"auth\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"path\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" /auth/\"),s(\"span\",{pre:!0,attrs:{class:\"token important\"}},[t._v(\"**\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"serviceId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ylzap\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"Auth\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"sensitiveHeaders\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"*\"')]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"retryable\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"true\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"ignored-services\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"*\"')]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"ribbon\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"eager-load\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n      \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"enabled\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean important\"}},[t._v(\"true\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"ribbon\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"ReadTimeout\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3000\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"其中\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-yml extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-yml\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"...\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"auth\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"path\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" /auth/\"),s(\"span\",{pre:!0,attrs:{class:\"token important\"}},[t._v(\"**\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"serviceId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" ylzap\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"-\")]),t._v(\"Auth\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[t._v(\"sensitiveHeaders\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"*\"')]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"这一段的意思是所有以/auth 开头的请求都会被转发到名称为ylzap-auth 的服务器，由于我们需要在请求头中携带令牌，所以\"),s(\"code\",[t._v(\"sensitiveHeaders\")]),t._v(\"设置为\"),s(\"code\",[t._v(\"*\")]),t._v(\"，表示不过滤请求头信息，既请求的请求头信息将原封不动的转发出去，此外，因为zuul已经包含了ribbon和hystrix依赖，所以我们在使用zuul 的同时，可以添加ribbon和hystrix相关配置\")]),t._v(\" \"),s(\"p\",[t._v(\"上述配置剩下的含义如下：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"zuul.retryable: 设置true，表示开启重试机制\")]),t._v(\" \"),s(\"li\",[t._v(\"zuul.ignored-services: zull 配合Eureka 后会有一套默认的配置规则，这里我们只想请求根据我们显示配置的路由规则走，所以设置为*，表示关闭所有默认路由配置规则\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"zuul.ribbon.eager-load.enabled\")]),t._v(\"，Zuul内部通过Ribbon按照一定的负载均衡算法来获取服务，Ribbon进行客户端负载均衡的Client并不是在服务启动的时候就初始化好的，而是在调用的时候才会去创建相应的Client，所以第一次调用的耗时不仅仅包含发送HTTP请求的时间，还包含了创建RibbonClient的时间，这样一来如果创建时间速度较慢，同时设置的超时时间又比较短的话，第一次请求很容易出现超时的情况。设置为true的时候表示开启Ribbon的饥饿加载模式，即在应用启动的时候就去获取相应的Client备用。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"ribbon.ReadTimeout\")]),t._v(\"，设置请求超时时间，单位为毫秒；\")])])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}