{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[297],{1258:function(e,o,t){\"use strict\";t.r(o);var s=t(42),r=Object(s.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"docker-compose入门\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#docker-compose入门\"}},[e._v(\"#\")]),e._v(\" Docker Compose入门\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_1-简介\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-简介\"}},[e._v(\"#\")]),e._v(\" 1. 简介\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"Docker Compose\")]),e._v(\" 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应用。\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"_1-1-compose-定位\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-compose-定位\"}},[e._v(\"#\")]),e._v(\" 1.1 Compose 定位:\")]),e._v(\" \"),t(\"p\",[e._v(\"定义和运行多个 Docker 容器应用（Defining and running multi-container Docker applications），其前身是开源项目Fig\")]),e._v(\" \"),t(\"h3\",{attrs:{id:\"_1-2-解决的问题与场景\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-解决的问题与场景\"}},[e._v(\"#\")]),e._v(\" 1.2 解决的问题与场景\")]),e._v(\" \"),t(\"p\",[e._v(\"我们知道使用一个\"),t(\"code\",[e._v(\"Dockerfile\")]),e._v(\"模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到\"),t(\"strong\",[e._v(\"需要多个容器相互配合来完成某项任务的情况\")]),e._v(\"。例如要实现一个Web项目，除了Web服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。\")]),e._v(\" \"),t(\"p\",[t(\"strong\",[t(\"code\",[e._v(\"Compose\")]),e._v(\" 恰好满足这样的需求，它允许用户通过一个单独的Docker-compose.yml 模板文件（YAML格式）来定义一组关联的应用容器为一个项目（project）\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_2-compose-两个重要概念\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-compose-两个重要概念\"}},[e._v(\"#\")]),e._v(\" 2. Compose 两个重要概念\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"服务（service）：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。\")]),e._v(\" \"),t(\"li\",[e._v(\"项目（peoject）：由一组关联的应用容器组成的一个完整业务单元，在docker-compose.yml\")])])])}),[],!1,null,null,null);o.default=r.exports}}]);","extractedComments":[]}