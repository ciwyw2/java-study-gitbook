{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{358:function(s,e,i){s.exports=i.p+\"assets/img/874710-20170221144715007-894494637.9d4ba3ba.png\"},359:function(s,e,i){s.exports=i.p+\"assets/img/874710-20170221191047757-1942818322.46b6c5ca.png\"},929:function(s,e,i){\"use strict\";i.r(e);var t=i(42),_=Object(t.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"session\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#session\"}},[s._v(\"#\")]),s._v(\" Session\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_1-奶茶买五送一的例子中-session如何识别用户\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-奶茶买五送一的例子中-session如何识别用户\"}},[s._v(\"#\")]),s._v(\" 1. 奶茶买五送一的例子中，Session如何识别用户？\")]),s._v(\" \"),t(\"p\",[s._v(\"Session 相当于办了一张会员卡来确定你是哪个用户。\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"店铺给顾客办理一张会员卡，除了卡号什么信息都不记录\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"每次消费，如果顾客出示会员卡，店员记录找到这个卡号对应记录添加一些消费信息\")])])]),s._v(\" \"),t(\"p\",[s._v(\"这种做法就是在服务器端保持状态。\")]),s._v(\" \"),t(\"p\",[s._v(\"这就是session的用法，在服务器端来保持状态，保存一些用户信息。\")]),s._v(\" \"),t(\"p\",[s._v(\"功能作用：服务器用于共享数据技术，\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:i(358),alt:\"\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_2-session原理分析\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-session原理分析\"}},[s._v(\"#\")]),s._v(\" 2. session原理分析：\")]),s._v(\" \"),t(\"p\",[s._v(\"浏览器请求服务器访问web站点时，\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"首先会检查是否创建过session\")]),s._v(\" \"),t(\"p\",[s._v(\"程序需要为客户端的请求创建一个session的时候，服务器首先会检查这个客户端请求是否已经包含了一个session标识、称为SESSIONID，\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"如果已经包含sessionId，则检索出原来的seesion\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"如果客户端请求不包含session id，创建一个session并且生成一个与此session相关联的session id\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"sessionid将在本次响应中返回到客户端保存\")]),s._v(\" \"),t(\"p\",[s._v(\"保存方式: 名字为JSESSIONID的cookie中\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_3-获取session\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-获取session\"}},[s._v(\"#\")]),s._v(\" 3. 获取session：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"request.getSession();\")]),s._v(\" \"),t(\"p\",[s._v(\"如果没有将创建一个新的，等效getSession(true);\")]),s._v(\" \"),t(\"p\",[s._v(\"PS:为什么是从request中获取呢？因为在获取session时，需要检查是否有session表示\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"request.getSession(boolean);\")]),s._v(\" \"),t(\"p\",[s._v(\"true：没有将创建，false：没有将返回null\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_4-session属性操作\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-session属性操作\"}},[s._v(\"#\")]),s._v(\" 4. session属性操作：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"xxxAttribute(...)\")])]),s._v(\" \"),t(\"p\",[s._v(\"用来存放一些信息，然后才能共享信息\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"setAttrubute(key,value);\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"getAttribute(key);\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_5-session生命周期\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-session生命周期\"}},[s._v(\"#\")]),s._v(\" 5. session生命周期\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_5-1-错误思想-只要关闭浏览器-session就消失了\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-1-错误思想-只要关闭浏览器-session就消失了\"}},[s._v(\"#\")]),s._v(\" 5.1 错误思想：只要关闭浏览器，session就消失了\")]),s._v(\" \"),t(\"p\",[s._v(\"常常听到这样一种误解“只要关闭浏览器，session就消失了”。其实可以想象一下会员卡的例子，除非顾客主动对店家提出销卡，否则店家绝对不会轻易删除顾客的资料。\")]),s._v(\" \"),t(\"p\",[s._v(\"对session来说也是一样的，\"),t(\"strong\",[s._v(\"除非程序通知服务器删除一个session，否则服务器会一直保留\")]),s._v(\"，程序一般都是在用户做log off的时候发个指令去删除session。然而浏览器从来不会主动在关闭之前通知服务器它将要关闭，因此服务器根本不会有机会知道浏览器已经关闭，\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"之所以会有这种错觉，是大部分session机制都使用会话cookie来保存session id，而关闭浏览器后这个session id就消失了，再次连接服务器时也就无法找到原来的session\")]),s._v(\"。如果服务器设置的cookie被保存到硬盘上，或者使用某种手段改写浏览器发出的HTTP请求头，把原来的session id发送给服务器，则再次打开浏览器仍然能够找到原来的session\")]),s._v(\" \"),t(\"p\",[s._v(\"恰恰是\"),t(\"strong\",[s._v(\"由于关闭浏览器不会导致session被删除，迫使服务器为seesion设置了一个失效时间，一般是30分钟\")]),s._v(\"，当距离客户端上一次使用session的时间超过这个失效时间时，服务器就可以认为客户端已经停止了活动，才会把session删除以节省存储空间\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_5-2-控制session的有效时间\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-2-控制session的有效时间\"}},[s._v(\"#\")]),s._v(\" 5.2 控制session的有效时间\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"session.invalidate()\")]),s._v(\" \"),t(\"p\",[s._v(\"将session对象销毁\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"setMaxInactiveInterval(int interval)\")]),s._v(\" \"),t(\"p\",[s._v(\"设置有效时间，单位秒\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"在web.xml中配置session的有效时间\")])])]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"　<session-config>\\n\\t<session-timeout>30</session-timeout>   单位：分钟\\n <session-config>\\n\")])])]),t(\"h3\",{attrs:{id:\"_5-3-session的生命周期\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-3-session的生命周期\"}},[s._v(\"#\")]),s._v(\" 5.3 session的生命周期\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"创建：第一次调用getSession()\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"销毁：\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[s._v(\"超时，默认30分钟\")]),s._v(\" \"),t(\"li\",[s._v(\"执行api：session.invalidate()将session对象销毁、setMaxInactiveInterval(int interval) 设置有效时间，单位秒\")]),s._v(\" \"),t(\"li\",[s._v(\"服务器非正常关闭\")]),s._v(\" \"),t(\"li\",[s._v(\"自杀，直接将JVM马上关闭\")]),s._v(\" \"),t(\"li\",[s._v(\"如果正常关闭，session就会被持久化(写入到文件中，因为session默认的超时时间为30分钟，正常关闭后，就会将session持久化，等30分钟后，就会被删除)\")])])])]),s._v(\" \"),t(\"p\",[s._v(\"位置：　D:\\\\java\\\\tomcat\\\\apache-tomcat-7.0.53\\\\work\\\\Catalina\\\\localhost\\\\test01\\\\SESSIONS.ser\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_6-session-id的url重写\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-session-id的url重写\"}},[s._v(\"#\")]),s._v(\" 6. session id的URL重写\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"当浏览器将cookie禁用，基于cookie的session将不能正常工作\")]),s._v(\"，每次使用request.getSession() 都将创建一个新的session。达不到session共享数据的目的，\")]),s._v(\" \"),t(\"p\",[s._v(\"但是我们知道原理，\"),t(\"strong\",[s._v(\"只需要将session id 传递给服务器session就可以正常工作的。\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_6-1-解决方案-url重写\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-1-解决方案-url重写\"}},[s._v(\"#\")]),s._v(\" 6.1 解决方案：URL重写\")]),s._v(\" \"),t(\"p\",[s._v(\"通过URL将session id 传递给服务器：URL重写\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"手动方式： url;jsessionid=....\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"api方式：\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"如果浏览器禁用cooke，api将自动追加session id ，如果没有禁用，api将不进行任何修改。\")])]),s._v(\" \"),t(\"p\",[s._v(\"response.encodeURL(java.lang.String url) 进行所有URL重写\")])])]),s._v(\" \"),t(\"p\",[s._v(\"response.encodeRedirectURL(java.lang.String url) 进行重定向 URL重写\")]),s._v(\" \"),t(\"p\",[s._v(\"​\\t这两个用法基本一致,只不过考虑特殊情况,要访问的链接可能会被Redirect到其他servlet去进行处理,这样你用上述方法带来的session的id信息不能被同时传送到其他servlet.这时候用encodeRedirectURL()方法就可以了\")]),s._v(\" \"),t(\"p\"),s._v(\" \"),t(\"p\",[s._v(\"注意：如果浏览器禁用cookie，web项目的所有url都需进行重写。否则session将不能正常工作\")]),s._v(\" \"),t(\"p\",[s._v(\"当禁止了cookie时，\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:i(359),alt:\"\"}})])])}),[],!1,null,null,null);e.default=_.exports}}]);","extractedComments":[]}