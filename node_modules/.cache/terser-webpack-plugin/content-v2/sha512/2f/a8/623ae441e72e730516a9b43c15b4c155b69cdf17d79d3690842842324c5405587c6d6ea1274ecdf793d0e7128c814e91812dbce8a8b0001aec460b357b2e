{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{1004:function(t,e,r){\"use strict\";r.r(e);var a=r(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"缓冲流\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓冲流\"}},[t._v(\"#\")]),t._v(\" 缓冲流\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"基本架构\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本架构\"}},[t._v(\"#\")]),t._v(\" 基本架构\")]),t._v(\" \"),r(\"table\",[r(\"thead\",[r(\"tr\",[r(\"th\",[t._v(\"抽象基类\")]),t._v(\" \"),r(\"th\",[t._v(\"节点流(文件流)\")]),t._v(\" \"),r(\"th\",[t._v(\"缓冲流（处理流的一种）\")])])]),t._v(\" \"),r(\"tbody\",[r(\"tr\",[r(\"td\",[t._v(\"InputStream\")]),t._v(\" \"),r(\"td\",[t._v(\"FileInputStream\")]),t._v(\" \"),r(\"td\",[t._v(\"BufferedInputStream\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[t._v(\"OutputStream\")]),t._v(\" \"),r(\"td\",[t._v(\"FileOutputStream\")]),t._v(\" \"),r(\"td\",[t._v(\"BufferedOutputStream（flush()）\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[t._v(\"Reader\")]),t._v(\" \"),r(\"td\",[t._v(\"FileReader\")]),t._v(\" \"),r(\"td\",[t._v(\"BufferedReader\")])]),t._v(\" \"),r(\"tr\",[r(\"td\",[t._v(\"Writer\")]),t._v(\" \"),r(\"td\",[t._v(\"FileWriter\")]),t._v(\" \"),r(\"td\",[t._v(\"BufferedWriter（flush()）\")])])])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"为什么缓冲流快一些\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么缓冲流快一些\"}},[t._v(\"#\")]),t._v(\" 为什么缓冲流快一些\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"底层数组实现\")]),t._v(\" \"),r(\"li\",[t._v(\"read方法是非阻塞式的\\n\"),r(\"ul\",[r(\"li\",[t._v(\"FileInputStream是阻塞式的\")]),t._v(\" \"),r(\"li\",[t._v(\"BufferInputStream 不是阻塞式的\")])])])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"使用缓冲流实现非文本复制\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用缓冲流实现非文本复制\"}},[t._v(\"#\")]),t._v(\" 使用缓冲流实现非文本复制\")]),t._v(\" \"),r(\"p\",[t._v(\"同样复制一个200M 的文件，不带缓冲需要3000ms，带缓冲500ms\")]),t._v(\" \"),r(\"p\",[t._v(\"实际开发中使用\"),r(\"strong\",[t._v(\"缓冲流较多，因为效率高\")])]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v('  // 1. 提供读入，写入的文件\\n        File file = new File(\"1.png\");\\n        File file2 = new File(\"2.png\");\\n        // 2.创建相应的节点流，FileInputStream、FileOutputStream\\n        FileInputStream fis = new FileInputStream(file);\\n        FileOutputStream fos = new FileOutputStream(file2);\\n        // 3.将创建的节点流的对象作为形参传递给缓冲流的构造器中\\n        BufferedInputStream bis = new BufferedInputStream(fis);\\n        BufferedOutputStream bos = new BufferedOutputStream(fos);\\n        // 4.具体的实现文件复制操作\\n        byte[] b = new byte[1024];\\n        int len;\\n        while ((len = bis.read(b)) != -1){\\n            bos.write(b,0,len);\\n             bos.flush();\\n        }\\n        bos.close();\\n        bis.close();\\n')])])]),r(\"h4\",{attrs:{id:\"优化1-bufferoutput写完最好刷新一下\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#优化1-bufferoutput写完最好刷新一下\"}},[t._v(\"#\")]),t._v(\" 优化1：BufferOutput写完最好刷新一下\")]),t._v(\" \"),r(\"p\",[t._v(\"前面没问题，最后一次可能存不满，要刷新一下给他写出去\")]),t._v(\" \"),r(\"p\",[t._v(\"也只有缓冲流才能加flush\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v(\"bos.flush();\\n\")])])]),r(\"p\",[t._v(\"####优化2：针对BufferRead 可以一次读取一行\")]),t._v(\" \"),r(\"p\",[t._v(\"读取一行的时候，最后判断不能使用-1，要使用null\")]),t._v(\" \"),r(\"p\",[t._v(\"读取一整行，所以他不会自动换行，需要手动换行\")]),t._v(\" \"),r(\"div\",{staticClass:\"language- extra-class\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[t._v('while((str = br.readLine())!=null){\\n    // 换行方式1：\\n    bw.write(str +\"\\\\n\");\\n    //换行方式2：\\n    bw.newLine();\\n    bw.flush();\\n}\\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}