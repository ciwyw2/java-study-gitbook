{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{1225:function(t,a,s){\"use strict\";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"jpa查询方式总结\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jpa查询方式总结\"}},[t._v(\"#\")]),t._v(\" JPA查询方式总结\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"查询方式种类\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查询方式种类\"}},[t._v(\"#\")]),t._v(\" 查询方式种类\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"按照jpa规范，通过方法名来创建查询\")]),t._v(\" \"),s(\"p\",[t._v(\"（简单的用这个，条件很多的话，用这个方法名会很长。）\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Query by Example\")]),t._v(\" \"),s(\"p\",[t._v(\"每次需要重新new 对象传入(不支持or,仅支持and)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"@Query  JPQL 或原生sql查询\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"EntityManager.createNativeQuery 原生SQL\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-按照jpa规范-通过方法名来创建查询\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-按照jpa规范-通过方法名来创建查询\"}},[t._v(\"#\")]),t._v(\" 1. 按照jpa规范，通过方法名来创建查询\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-1-核心方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-核心方法\"}},[t._v(\"#\")]),t._v(\" 1.1 核心方法\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"查询所有数据 findAll()\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"修改 添加数据 S save(S entity)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"分页查询 Page\"),s(\"code\",[t._v(\"<S>\")]),t._v(\" findAll(Example\"),s(\"code\",[t._v(\"<S>\")]),t._v(\"example, Pageable pageable)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"根据id查询 findOne()\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"根据实体类属性查询： findByProperty (type Property); 例如：findByAge(int age)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"删除 void delete(T entity)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"计数 查询 long count() 或者 根据某个属性的值查询总数 countByAge(int age)\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"是否存在  boolean existsById(ID primaryKey)\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-2-查询关键字\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-查询关键字\"}},[t._v(\"#\")]),t._v(\" 1.2 查询关键字\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"and\")]),t._v(\" \"),s(\"p\",[t._v(\"And 例如：findByUsernameAndPassword(String user, Striang pwd)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"or\")]),t._v(\" \"),s(\"p\",[t._v(\"Or 例如：findByUsernameOrAddress(String user, String addr)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"between\")]),t._v(\" \"),s(\"p\",[t._v(\"Between 例如：SalaryBetween(int max, int min)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v('\"<\"')]),t._v(\" \"),s(\"p\",[t._v(\"LessThan 例如： findBySalaryLessThan(int max)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v('\">\"')]),t._v(\" \"),s(\"p\",[t._v(\"GreaterThan 例如： findBySalaryGreaterThan(int min)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"is null\")]),t._v(\" \"),s(\"p\",[t._v(\"IsNull 例如： findByUsernameIsNull()；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"is not null\")]),t._v(\" \"),s(\"p\",[t._v(\"IsNotNull NotNull 与 IsNotNull 等价 例如： findByUsernameIsNotNull()；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"like\")]),t._v(\" \"),s(\"p\",[t._v(\"Like 例如： findByUsernameLike(String user)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"not like\")]),t._v(\" \"),s(\"p\",[t._v(\"NotLike 例如： findByUsernameNotLike(String user)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"order by\")]),t._v(\" \"),s(\"p\",[t._v(\"OrderBy 例如： findByUsernameOrderByNameAsc(String user)；直接通过name正序排序\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v('\"!=\"')]),t._v(\" \"),s(\"p\",[t._v(\"Not 例如： findByUsernameNot(String user)；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"in\")]),t._v(\" \"),s(\"p\",[t._v(\"In 例如： findByUsernameIn(Collection\"),s(\"code\",[t._v(\"<String>\")]),t._v(\" userList) ，方法的参数可以是 Collection 类型，也可以是数组或者不定长参数；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"not in\")]),t._v(\" \"),s(\"p\",[t._v(\"NotIn 例如： findByUsernameNotIn(Collection\"),s(\"code\",[t._v(\"<String>\")]),t._v(\" userList) ，方法的参数可以是 Collection 类型，也可以是数组或者不定长参数；\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Top/Limit\")]),t._v(\" \"),s(\"p\",[t._v(\"查询方法结果的数量可以通过关键字来限制，first 或者 top都可以使用。top/first加数字可以指定要返回最大结果的大小 默认为1\")])])]),t._v(\" \"),s(\"p\",[t._v(\"例如:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findFirstByOrderByLastnameAsc\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findTopByOrderByAgeDesc\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Page\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"queryFirst10ByLastname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Pageable\")]),t._v(\" pageable\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Slice\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findTop3ByLastname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Pageable\")]),t._v(\" pageable\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findFirst10ByLastname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),t._v(\" sort\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findTop10ByLastname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Pageable\")]),t._v(\" pageable\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_1-3-详细查询语法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3-详细查询语法\"}},[t._v(\"#\")]),t._v(\" 1.3 详细查询语法\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",{staticStyle:{\"text-align\":\"left\"}},[s(\"strong\",[t._v(\"关键词\")])]),t._v(\" \"),s(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"示例\")]),t._v(\" \"),s(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"对应的sql片段\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"And\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByLastnameAndFirstname\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.lastname = ?1 and x.firstname = ?2\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Or\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByLastnameOrFirstname\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.lastname = ?1 or x.firstname = ?2\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Is,Equals\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstname\")]),t._v(\",\"),s(\"code\",[t._v(\"findByFirstnameIs\")]),t._v(\",\"),s(\"code\",[t._v(\"findByFirstnameEquals\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname = ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Between\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByStartDateBetween\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.startDate between ?1 and ?2\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"LessThan\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeLessThan\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age < ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"LessThanEqual\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeLessThanEqual\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age <= ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"GreaterThan\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeGreaterThan\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age > ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"GreaterThanEqual\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeGreaterThanEqual\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age >= ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"After\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByStartDateAfter\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.startDate > ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Before\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByStartDateBefore\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.startDate < ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"IsNull\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeIsNull\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age is null\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"IsNotNull,NotNull\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAge(Is)NotNull\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age not null\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Like\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameLike\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname like ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"NotLike\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameNotLike\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname not like ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"StartingWith\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameStartingWith\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname like ?1\")]),t._v(\" (parameter bound with appended \"),s(\"code\",[t._v(\"%\")]),t._v(\")\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"EndingWith\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameEndingWith\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname like ?1\")]),t._v(\" (parameter bound with prepended \"),s(\"code\",[t._v(\"%\")]),t._v(\")\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Containing\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameContaining\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.firstname like ?1\")]),t._v(\" (parameter bound wrapped in \"),s(\"code\",[t._v(\"%\")]),t._v(\")\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"OrderBy\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeOrderByLastnameDesc\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age = ?1 order by x.lastname desc\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"Not\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByLastnameNot\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.lastname <> ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"In\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeIn(Collection ages)\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age in ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"NotIn\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByAgeNotIn(Collection ages)\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.age not in ?1\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"True\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByActiveTrue()\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.active = true\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"False\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByActiveFalse()\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where x.active = false\")])])]),t._v(\" \"),s(\"tr\",[s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"IgnoreCase\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"findByFirstnameIgnoreCase\")])]),t._v(\" \"),s(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s(\"code\",[t._v(\"… where UPPER(x.firstame) = UPPER(?1)\")])])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-4-内置方法-分页-排序\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4-内置方法-分页-排序\"}},[t._v(\"#\")]),t._v(\" 1.4 内置方法 （分页，排序）\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"Sort_排序\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),t._v(\" sort \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Direction\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"ASC\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"id\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//其中第一个参数表示是降序还是升序（此处表示升序）\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//第二个参数表示你要按你的 entity（记住是entity中声明的变量，不是数据库中表对应的字段）中的那个变量进行排序\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"strong\",[t._v(\"PageRequest_分页\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageRequest\")]),t._v(\" pageRequest \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageRequest\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"index\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" num\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" sort\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//index偏移量 num查询数量 sort排序\")]),t._v(\"\\n\")])])]),s(\"p\",[s(\"strong\",[t._v(\"分页+排序实现:\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"DemoBean\")]),t._v(\" demoBean \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"DemoBean\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\ndemoBean\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setAppId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"appId\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//查询条件\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建查询参数\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"DemoBean\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" example \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"of\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"demoBean\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//获取排序对象\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),t._v(\" sort \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Sort\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Direction\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"DESC\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"id\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建分页对象\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageRequest\")]),t._v(\" pageRequest \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"PageRequest\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"index\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" num\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" sort\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//分页查询\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" demoRepository\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findAll\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"example\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" pageRequest\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getContent\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"_2-example-实例查询\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-example-实例查询\"}},[t._v(\"#\")]),t._v(\" 2. Example_实例查询\")]),t._v(\" \"),s(\"p\",[t._v(\"创建一个ExampleMatcher对象，最后再用Example的of方法构造相应的Example对象并传递给相关查询方法。我们看看Spring的例子。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),t._v(\" person \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"                          \\nperson\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setFirstname\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"Dave\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//Firstname = 'Dave'                          \")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ExampleMatcher\")]),t._v(\" matcher \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ExampleMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"matching\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"                     \\n\\t\\t\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"name\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"GenericPropertyMatchers\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"startsWith\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//姓名采用“开始匹配”的方式查询\")]),t._v(\"\\n\\t\\t\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withIgnorePaths\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"int\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//忽略属性：是否关注。因为是基本类型，需要忽略掉\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Person\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" example \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"of\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" matcher\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//Example根据域对象和配置创建一个新的ExampleMatcher  \")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"ExampleMatcher用于创建一个查询对象，上面的代码就创建了一个查询对象。withIgnorePaths方法用来排除某个属性的查询。withIncludeNullValues方法让空值也参与查询，就是我们设置了对象的姓，而名为空值.\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-1-概念定义\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-概念定义\"}},[t._v(\"#\")]),t._v(\" 2.1 概念定义:\")]),t._v(\" \"),s(\"p\",[t._v(\"上面例子中，是这样创建“实例”的：Example\"),s(\"code\",[t._v(\"<Customer>\")]),t._v(\" ex = Example.of(customer, matcher);我们看到，Example对象，由customer和matcher共同创建。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"实体对象：\")]),t._v(\" \"),s(\"p\",[t._v(\"在持久化框架中与Table对应的域对象，一个对象代表数据库表中的一条记录，如上例中Customer对象。在构建查询条件时，一个实体对象代表的是查询条件中的“数值”部分。如：要查询名字是“Dave”的客户，实体对象只能存储条件值“Dave”。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"匹配器：ExampleMatcher对象，\")]),t._v(\" \"),s(\"p\",[t._v('它是匹配“实体对象”的，表示了如何使用“实体对象”中的“值”进行查询，它代表的是“查询方式”，解释了如何去查的问题。如：要查询FirstName是“Dave”的客户,即名以“Dave\"开头的客户，该对象就表示了“以什么开头的”这个查询方式，如上例中:withMatcher(\"name\", GenericPropertyMatchers.startsWith())')])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"实例：即Example对象\")]),t._v(\" \"),s(\"p\",[t._v(\"代表的是完整的查询条件。由实体对象（查询条件值）和匹配器（查询方式）共同创建。\")]),t._v(\" \"),s(\"p\",[t._v(\"再来理解“实例查询”，顾名思义，就是通过一个例子来查询。要查询的是Customer对象，查询条件也是一个Customer对象，通过一个现有的客户对象作为例子，查询和这个例子相匹配的对象。\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-2-特点及约束-局限性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-特点及约束-局限性\"}},[t._v(\"#\")]),t._v(\" 2.2 特点及约束（局限性）:\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"支持动态查询。\")]),t._v(\" \"),s(\"p\",[t._v(\"即支持查询条件个数不固定的情况，如：客户列表中有多个过滤条件，用户使用时在“地址”查询框中输入了值，就需要按地址进行过滤，如果没有输入值，就忽略这个过滤条件。对应的实现是，在构建查询条件Customer对象时，将address属性值置具体的条件值或置为null。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"不支持过滤条件分组。\"),s(\"strong\",[t._v(\"即不支持过滤条件用 or(或) 来连接，所有的过滤查件，都是简单一层的用 and(并且) 连接\")]),t._v(\"。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[s(\"strong\",[t._v(\"仅支持\")]),t._v(\"字符串的开始/包含/结束/正则表达式匹配 和 其他属性类型的\"),s(\"strong\",[t._v(\"精确匹配\")]),t._v(\"。\")]),t._v(\" \"),s(\"p\",[t._v(\"查询时，对一个要进行匹配的属性（如：姓名 name），只能传入一个过滤条件值，如以Customer为例，要查询姓“刘”的客户，“刘”这个条件值就存储在表示条件对象的Customer对象的name属性中，针对于“姓名”的过滤也只有这么一个存储过滤值的位置，没办法同时传入两个过滤值。正是由于这个限制，有些查询是没办法支持的，例如要查询某个时间段内添加的客户，对应的属性是 addTime，需要传入“开始时间”和“结束时间”两个条件值，而这种查询方式没有存两个值的位置，所以就没办法完成这样的查询。\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-3-范例\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-范例\"}},[t._v(\"#\")]),t._v(\" 2.3 范例\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"综合使用:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建查询条件数据对象\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Customer\")]),t._v(\" customer \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Customer\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    customer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setName\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"zhang\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    customer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setAddress\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"河南省\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    customer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setRemark\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"BB\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建匹配器，即如何使用查询条件\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ExampleMatcher\")]),t._v(\" matcher \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"ExampleMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"matching\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//构建对象\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withStringMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"StringMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"CONTAINING\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//改变默认字符串匹配方式：模糊查询\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withIgnoreCase\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//改变默认大小写忽略方式：忽略大小写\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withMatcher\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"address\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"GenericPropertyMatchers\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"startsWith\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//地址采用“开始匹配”的方式查询\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withIgnorePaths\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"focus\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//忽略属性：是否关注。因为是基本类型，需要忽略掉\")]),t._v(\"\\n    \\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建实例\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Customer\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" ex \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Example\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"of\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"customer\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" matcher\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n    \\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//查询\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Customer\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" ls \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" dao\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findAll\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"ex\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"查询null值:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('//创建查询条件数据对象\\n        Customer customer = new Customer();\\n \\n        //创建匹配器，即如何使用查询条件\\n        ExampleMatcher matcher = ExampleMatcher.matching() //构建对象\\n                .withIncludeNullValues() //改变“Null值处理方式”：包括\\n                .withIgnorePaths(\"id\",\"name\",\"sex\",\"age\",\"focus\",\"addTime\",\"remark\",\"customerType\");  //忽略其他属性\\n        \\n        //创建实例\\n        Example<Customer> ex = Example.of(customer, matcher); \\n        \\n        //查询\\n        List<Customer> ls = dao.findAll(ex);\\n')])])])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_3-query注解\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-query注解\"}},[t._v(\"#\")]),t._v(\" 3. @Query注解\")]),t._v(\" \"),s(\"p\",[t._v(\"查询接口不符合命名规范呢，如果想使用自定义查询，比如子查询呢？\")]),t._v(\" \"),s(\"p\",[t._v(\"上面所讲述的方法将失效，此时就要用到@Query注解，\"),s(\"strong\",[t._v(\"注解里面使用JPQL语言或者普通SQL查询\")]),t._v(\"。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_3-1-jpql\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-jpql\"}},[t._v(\"#\")]),t._v(\" 3.1 JPQL\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-JAVA extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"interface\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"UserRepository\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"extends\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JpaRepository\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Long\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"select u from User u where u.emailAddress = ?1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findByEmailAddress\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" emailAddress\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n \\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"select u from User u where u.firstname like %?1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findByFirstnameEndsWith\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" firstname\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_3-2-原生sql查询\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-原生sql查询\"}},[t._v(\"#\")]),t._v(\" 3.2 原生sql查询\")]),t._v(\" \"),s(\"p\",[t._v(\"需要 添加：\"),s(\"strong\",[t._v(\"nativeQuery = true\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"interface\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"UserRepository\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"extends\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"JpaRepository\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Long\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"value \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"SELECT * FROM USERS WHERE EMAIL_ADDRESS = ?1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" nativeQuery \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findByEmailAddress\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" emailAddress\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"_3-3-怎么往-query注解中的jpql中传递参数呢\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-3-怎么往-query注解中的jpql中传递参数呢\"}},[t._v(\"#\")]),t._v(\" 3.3 怎么往@Query注解中的JPQL中传递参数呢？\")]),t._v(\" \"),s(\"p\",[t._v(\"两种方式：索引参数和命名参数。\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"索引参数\")]),t._v(\" \"),s(\"p\",[t._v(\"索引参数如下所示，索引值从1开始，查询中 \"),s(\"code\",[t._v(\"”?X”\")]),t._v(\"个数需要与方法定义的参数个数相一致，并且顺序也要一致。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('@Query(\"select u from User u where u.lastName=?1 and u.email=?2\")\\nUser testQueryAnnotationParams1(String lastName,String email);\\n')])])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"命名参数\")]),t._v(\" \"),s(\"p\",[t._v(\"可以定义好参数名，赋值时采用@Param(“参数名”)，而不用管顺序。\"),s(\"strong\",[t._v(\"推荐使用这种方式\")]),t._v(\"。\")]),t._v(\" \"),s(\"p\",[t._v(\"实例如下：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('@Query(\"select u from User u where u.lastName=:lastName and u.email=:email\")\\nUser testQueryAnnotationParams2(@Param(\"lastName\") String lastName, @Param(\"email\") String email);\\n')])])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_3-4-query中有like关键字\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-4-query中有like关键字\"}},[t._v(\"#\")]),t._v(\" 3.4 Query中有like关键字\")]),t._v(\" \"),s(\"p\",[t._v(\"如果是 @Query 中有 LIKE 关键字，后面的参数需要前面或者后面加 %，这样在传递参数值的时候就可以不加 %：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//参数后面添加%\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"select u from User u where u.lastName like ?1%\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" findBylastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//参数前面添加%\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"select u from User u where u.lastName like %?1\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" findBylastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//参数前后添加%\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Query\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"select u from User u where u.lastName like %?1%\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" findBylastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" lastName \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"_4-entitymanager-createnativequery-原生sql\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-entitymanager-createnativequery-原生sql\"}},[t._v(\"#\")]),t._v(\" 4. EntityManager.createNativeQuery 原生SQL\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-JAVA extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Repository\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SysRoleDaoImpl\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"implements\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SysRoleDao\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n \\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Autowired\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"EntityManagerFactory\")]),t._v(\" factory\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[t._v(\"@Override\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),s(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SysRole\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"findByUserId\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" id\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" sql \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"SELECT r.* FROM sys_role_user ru LEFT JOIN sys_role r ON ru.sys_role_id = r.id WHERE ru.sys_user_id =:userId\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"EntityManager\")]),t._v(\" manager \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" factory\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createEntityManager\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Query\")]),t._v(\" query \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" manager\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createNativeQuery\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"sql \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"SysRole\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        query\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setParameter\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"userId\"')]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" id\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"List\")]),t._v(\" list \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" query\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getResultList\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        manager\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"close\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" list\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"参考文章\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考文章\"}},[t._v(\"#\")]),t._v(\" 参考文章\")]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_30054997/article/details/79420141\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Spring data jpa 复杂动态查询方式总结\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://blog.csdn.net/J080624/article/details/82559318\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Spring Data JPA 查询方法那些事\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://blog.csdn.net/laokaizzz/article/details/81741994\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"spring data jpa 几种查询方式\"),s(\"OutboundLink\")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}